[{"/Users/anelamra/Desktop/matcha/client/src/index.js":"1","/Users/anelamra/Desktop/matcha/client/src/App.js":"2","/Users/anelamra/Desktop/matcha/client/src/history/history.js":"3","/Users/anelamra/Desktop/matcha/client/src/start/theme.js":"4","/Users/anelamra/Desktop/matcha/client/src/start/init.js":"5","/Users/anelamra/Desktop/matcha/client/src/start/SocketContext.js":"6","/Users/anelamra/Desktop/matcha/client/src/component/auth/Valid.js":"7","/Users/anelamra/Desktop/matcha/client/src/component/auth/Sign-in.js":"8","/Users/anelamra/Desktop/matcha/client/src/component/auth/Login.js":"9","/Users/anelamra/Desktop/matcha/client/src/component/forget/sendForget.js":"10","/Users/anelamra/Desktop/matcha/client/src/component/forget/forget.js":"11","/Users/anelamra/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js":"12","/Users/anelamra/Desktop/matcha/client/src/start/IntraSvg.js":"13","/Users/anelamra/Desktop/matcha/client/src/component/layout/res/About.js":"14","/Users/anelamra/Desktop/matcha/client/src/component/helpers/size.js":"15","/Users/anelamra/Desktop/matcha/client/src/component/chat/Chat.js":"16","/Users/anelamra/Desktop/matcha/client/src/component/browsing/browsing.js":"17","/Users/anelamra/Desktop/matcha/client/src/component/profil/Home.js":"18","/Users/anelamra/Desktop/matcha/client/src/component/profil/editProfill.js":"19","/Users/anelamra/Desktop/matcha/client/src/component/profil/setting.js":"20","/Users/anelamra/Desktop/matcha/client/src/component/history/history.js":"21","/Users/anelamra/Desktop/matcha/client/src/component/chat/ChatBox.js":"22","/Users/anelamra/Desktop/matcha/client/src/component/browsing/filter.js":"23","/Users/anelamra/Desktop/matcha/client/src/component/browsing/sort.js":"24","/Users/anelamra/Desktop/matcha/client/src/component/browsing/profil.js":"25","/Users/anelamra/Desktop/matcha/client/src/component/browsing/map.js":"26","/Users/anelamra/Desktop/matcha/client/src/component/browsing/search.js":"27","/Users/anelamra/Desktop/matcha/client/src/component/profil/myAddImages.js":"28","/Users/anelamra/Desktop/matcha/client/src/component/profil/fillProfil.js":"29","/Users/anelamra/Desktop/matcha/client/src/component/profil/geo.js":"30","/Users/anelamra/Desktop/matcha/client/src/component/chat/LeftSection.js":"31"},{"size":663,"mtime":1615212293000,"results":"32","hashOfConfig":"33"},{"size":248,"mtime":1615212293000,"results":"34","hashOfConfig":"33"},{"size":87,"mtime":1615212293000,"results":"35","hashOfConfig":"33"},{"size":141,"mtime":1615212293000,"results":"36","hashOfConfig":"33"},{"size":2260,"mtime":1615212293000,"results":"37","hashOfConfig":"33"},{"size":103,"mtime":1615212293000,"results":"38","hashOfConfig":"33"},{"size":1093,"mtime":1615212293000,"results":"39","hashOfConfig":"33"},{"size":11661,"mtime":1615212293000,"results":"40","hashOfConfig":"33"},{"size":10084,"mtime":1615212293000,"results":"41","hashOfConfig":"33"},{"size":3283,"mtime":1615212293000,"results":"42","hashOfConfig":"33"},{"size":3362,"mtime":1615212293000,"results":"43","hashOfConfig":"33"},{"size":9990,"mtime":1615212293000,"results":"44","hashOfConfig":"33"},{"size":6687,"mtime":1615212293000,"results":"45","hashOfConfig":"33"},{"size":473,"mtime":1615212293000,"results":"46","hashOfConfig":"33"},{"size":399,"mtime":1615212293000,"results":"47","hashOfConfig":"33"},{"size":3045,"mtime":1615314275000,"results":"48","hashOfConfig":"33"},{"size":6262,"mtime":1615212293000,"results":"49","hashOfConfig":"33"},{"size":4626,"mtime":1615212293000,"results":"50","hashOfConfig":"33"},{"size":4685,"mtime":1615212293000,"results":"51","hashOfConfig":"33"},{"size":147,"mtime":1615212293000,"results":"52","hashOfConfig":"33"},{"size":1298,"mtime":1615212293000,"results":"53","hashOfConfig":"33"},{"size":3513,"mtime":1615314438000,"results":"54","hashOfConfig":"33"},{"size":2672,"mtime":1615212293000,"results":"55","hashOfConfig":"33"},{"size":1221,"mtime":1615212293000,"results":"56","hashOfConfig":"33"},{"size":4441,"mtime":1615212293000,"results":"57","hashOfConfig":"33"},{"size":3986,"mtime":1615212293000,"results":"58","hashOfConfig":"33"},{"size":5982,"mtime":1615212293000,"results":"59","hashOfConfig":"33"},{"size":6921,"mtime":1615212293000,"results":"60","hashOfConfig":"33"},{"size":9761,"mtime":1615212293000,"results":"61","hashOfConfig":"33"},{"size":4676,"mtime":1615212293000,"results":"62","hashOfConfig":"33"},{"size":4478,"mtime":1615307578000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"60t8g0",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},"/Users/anelamra/Desktop/matcha/client/src/index.js",[],["131","132"],"/Users/anelamra/Desktop/matcha/client/src/App.js",[],"/Users/anelamra/Desktop/matcha/client/src/history/history.js",[],"/Users/anelamra/Desktop/matcha/client/src/start/theme.js",[],"/Users/anelamra/Desktop/matcha/client/src/start/init.js",[],"/Users/anelamra/Desktop/matcha/client/src/start/SocketContext.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/auth/Valid.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/auth/Sign-in.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/auth/Login.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/forget/sendForget.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/forget/forget.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js",["133"],"import React from \"react\"\nimport Axios from \"axios\"\nimport { withRouter, Switch, Route } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport \"../../../start/styles.css\"\nimport {\n  Avatar, \n  Typography,\n  Toolbar,\n  AppBar,\n  CssBaseline,\n  Divider,\n  List,\n  IconButton,\n  Hidden,\n  Drawer,\n  ListItemText,\n  ListItemIcon,\n  ListItem,\n  // Badge\n} from \"@material-ui/core\"\nimport {\n  Menu as MenuIcon\n  // LocationOn\n} from \"@material-ui/icons\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { FaHome, FaInfoCircle, FaHistory, FaHotjar, FaRegSun } from \"react-icons/fa\"\nimport { AiFillMessage } from \"react-icons/ai\";\nimport { RiLogoutCircleLine } from \"react-icons/ri\"\nimport { MdAccountCircle } from \"react-icons/md\"\n\nimport About from \"./About\"\nimport Chat from \"../../chat/Chat\"\nimport Browsing from \"../../browsing/browsing\"\nimport Home from \"../../profil/Home\"\nimport EditProfil from \"../../profil/editProfill\"\nimport Setting from \"../../profil/setting\"\nimport History from \"../../history/history\"\nimport SocketContext from \"../../../start/SocketContext\"\n\nconst instance = Axios.create({ withCredentials: true });\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n  },\n  ty: {\n    flexGrow: 1,\n    fontFamily: \"Comfortaa\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst ResponsiveDrawer = (props) => {\n  const { history, window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [id, setId] = React.useState(\"\");\n  const [lat, setLat] = React.useState(false);\n  const [long, setLong] = React.useState(false);\n  const [requiredProfilInfo, setRPI] = React.useState('');\n  const [avatar, setAvatar] = React.useState('');\n\n  const socket = React.useContext(SocketContext);\n\n  navigator.geolocation.getCurrentPosition((position) => {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n  });\n\n  const func = async () => {\n    if (props.loggedin){\n      await instance.get('http://localhost:3001/base').then(\n        (response) => {\n          if (response.data.user.id !== undefined) {\n            setId(response.data.user.id)\n          }\n        },\n        (err) => {}\n      )\n      if (id !== '') {\n        instance\n          .post('http://localhost:3001/user/userInfoVerification', { userId: id })\n          .then(\n            (res) => {\n              if (res.data.status === true) {\n                setRPI(true)\n              } else setRPI(false)\n            },\n            (err) => {}\n          )\n      }\n    } \n    // socket\n    // socket.emit('inResponsive', id);   \n  }\n\n  React.useEffect(() => {\n      func()\n  })\n\n  React.useEffect(() => {\n    // Get Profile Img (for avatar)\n    if(id)\n    {\n      // console.log('avatar', avatar);\n      Axios.post('http://localhost:3001/user/getUserAvatar', {userId: id})\n      .then((res) => {\n        // console.log(res);\n        if(res.data.image)\n        {\n          setAvatar(res.data.image);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    }\n  })\n\n  const getLocIp = React.useCallback(() => {\n    // get locallization with help of ip\n    Axios.get('https://api.ipify.org?format=json').then(async (res) => {\n      await Axios.get(`http://ip-api.com/json/${res.data.ip}`).then(res => {\n        console.log(res.data)\n        setLat(res.data.lat);\n        setLong(res.data.lon);\n      })\n      if (id) Axios.post(`base/localisation/${id}`, { lat: lat, long: long });\n    })\n  }, [id, lat, long])\n\n  React.useEffect(() => {\n    // save the localization here\n    if (lat === false && long === false){\n      // hta l push after enablet\n      // getLocIp()\n    }else\n      if (id) Axios.post(`base/localisation/${id}`, { lat: lat, long: long });\n  }, [id, lat, long, getLocIp]);\n\n\n  const handelLogout = () => {\n    instance.post(\"http://localhost:3001/logout\");\n    instance.post(\"http://localhost:3001/chat/redisDeleteId\", {userId:id})\n    .then((res) => {\n      console.log(res.data.totalofKeysRemoved)\n    }).catch((err) => console.log(err));\n    props.logout();\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const itemsListOne = [\n    {\n      id: 0,\n      text: 'Home',\n      icon: <FaHome />,\n      onClick: () => history.push('/'),\n      hidden: true,\n      disabled: requiredProfilInfo,\n    },\n    {\n      id: 1,\n      text: 'browsing',\n      icon: <FaHotjar />,\n      onClick: () => history.push(`/browsing/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 3,\n      text: 'Profile',\n      icon: <MdAccountCircle />,\n      onClick: () => history.push(`/edit/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 4,\n      text: 'History',\n      icon: <FaHistory />,\n      onClick: () => history.push(`/history/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n\n    {\n      id: 5,\n      text: 'Setting',\n      icon: <FaRegSun />,\n      onClick: () => history.push('/setting'),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 6,\n      text: 'Chat',\n      icon: <AiFillMessage />,\n      onClick: () => history.push('/chat'),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 7,\n      text: 'About',\n      icon: <FaInfoCircle />,\n      onClick: () => history.push('/about'),\n      disabled: !requiredProfilInfo,\n    },\n  ]\n  const itemsListTwo = [\n    {\n      id: 100,\n      text: \"Logout\",\n      icon: <RiLogoutCircleLine />,\n      onClick: () => {\n        handelLogout();\n      },\n    },\n  ];\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List key={Math.random()}>\n        {itemsListOne.map((item, index) => {\n          const { id, text, icon, onClick, disabled, hidden } = item\n          if (!hidden) {\n            return (\n              <ListItem button key={id} disabled={disabled} onClick={onClick}>\n                {icon && <ListItemIcon style={{color: \"purple\"}}>{icon}</ListItemIcon>}\n                <ListItemText style={{color: \"purple\"}} key={id + Math.random()} primary={text} />\n              </ListItem>\n            )\n          }\n          return <React.Fragment key={Math.random()}></React.Fragment>\n        })}\n      </List>\n      <Divider />\n      <List key={Math.random()}>\n        {itemsListTwo.map((item, index) => {\n          const { id, text, icon, onClick } = item\n          return (\n            <ListItem button key={id} onClick={onClick}>\n              <ListItemText key={id + Math.random()} primary={text} />\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color='secondary'\n            aria-label='open drawer'\n            edge='start'\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.ty} variant='h6' noWrap>\n            matcha\n          </Typography>\n          {\n            (1 === 2) ?\n            <Avatar alt=\"Username\" src={`http://localhost:3001/${avatar}`}/>\n            :\n            <Avatar alt=\"?\" src={`http://localhost:3001/${avatar}`}/>\n          }\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label='mailbox folders'>\n        <Hidden smUp implementation='css'>\n          <Drawer\n            container={container}\n            variant='temporary'\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation='css'>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant='permanent'\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route exact path='/edit/:id' component={EditProfil} />\n          <Route\n            exact\n            path='/chat'\n            render={(props) => <Chat id={id} />}\n          />\n          <Route\n            exact\n            path='/browsing/:id'\n            render={(props) => <Browsing id={id} />}\n          />\n          <Route exact path='/history/:id' component={History} />\n          <Route\n            exact\n            path='/setting'\n            component={(props) => <Setting id={id} />}\n          />\n          <Route exact path='/about' component={About} />\n          {requiredProfilInfo === true ? (\n            <Route exact path='/' render={(props) => <Browsing id={id} />} />\n          ) : (\n            <Route exact path='/*' render={(props) => <Home id={id} />} />\n          )}\n        </Switch>\n      </main>\n    </div>\n  )\n};\n\nResponsiveDrawer.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default withRouter(ResponsiveDrawer);\n","/Users/anelamra/Desktop/matcha/client/src/start/IntraSvg.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/layout/res/About.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/helpers/size.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/chat/Chat.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/browsing.js",["152"],"import React from 'react'\nimport Axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Filter from './filter'\nimport SortComponent from './sort'\nimport clsx from 'clsx'\nimport Profil from './profil'\nimport Map from \"./map\"\nimport Search from './search'\nimport {\n  Badge, \n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  // Collapse,\n  Avatar,\n  IconButton,\n  Typography,\n  Container,\n  Grid,\n  Box\n} from '@material-ui/core'\nimport {\n  Favorite,\n  ThumbDown as ThumbDownIcon\n} from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  diva: {\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    height: '100vh',\n  },\n  container: {\n    fontFamily: \"Comfortaa\"\n  },\n  copy: {\n    marginBottom: theme.spacing(8),\n    textAlign: 'center',\n  },\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  media1: {\n    width: '2vw',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}))\n\nconst Browsing = (props) => {\n  const [cord, setCord] = React.useState([])\n  const [gender, setGender] = React.useState('')\n  const classes = useStyles()\n  const [list, setList] = React.useState([])\n  const [list1, setList1] = React.useState([])\n\n  const getLocalisation = React.useCallback(async () => {\n    await Axios.post(`/browsing/geo/${props.id}`).then((res) => {\n      setGender(res.data.type)\n      setCord(res.data.geo)\n    })\n  }, [props.id])\n\n  React.useEffect(() => {\n    if (cord.length) {\n      Axios.post(`/browsing/${props.id}`, {\n        cord: cord,\n        gender: gender,\n      }).then((res) => {\n        console.log(res.data)\n        if (res.data){\n          setList(res.data)\n          setList1(res.data)  \n        }\n      })\n    } else getLocalisation()\n  }, [cord, gender, getLocalisation, props.id])\n\n  const handelLike = (event, idLiker, idLiked) => {\n    event.preventDefault()\n    Axios.post(`/browsing/likes/${idLiker}`, {idLiked: idLiked}).then(res => {\n      console.log(res.data)\n      if (res.data.status) {\n        const newList = list1.filter((item) => item.id !== idLiked)\n        setList1(newList)\n      }\n    })\n  }\n\n  const handelDeslike = (event, idLiker, idLiked) => {\n    event.preventDefault()\n    Axios.post(`/browsing/deslike/${idLiker}`, {idLiked: idLiked}).then(res => {\n      if (res.data.status) {\n        const newList = list1.filter((item) => item.id !== idLiked)\n        setList1(newList)\n      }\n    })\n  }\n\n  return (\n    <div className={classes.diva}>\n      <Grid\n        container\n        className={classes.container}\n        justify='center'\n        alignItems='center'\n      >\n        <Grid item xs={12} sm={2}>\n          <SortComponent setList={setList1} list={list1} />\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Map list={list1} />\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Search\n            setList={setList}\n            setList1={setList1}\n            cord={cord}\n            gender={gender}\n            id={props.id}\n          />\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <Filter setList1={setList1} list={list} />\n        </Grid>\n        <Container className={classes.copy} component='main' maxWidth='xs'>\n          <Grid item xs={12} sm={12}>\n            {list1 &&\n              list1\n                .map((el, key) => {\n                  const imageProfil = el.images.split(',')\n                  return (\n                    <Box m={2} key={key}>\n                      <Card className={classes.root}>\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              aria-label='recipe'\n                              src={`http://localhost:3001/${imageProfil[0]}`}\n                              alt={`test${imageProfil[0]}`}\n                            ></Avatar>\n                          }\n                          action={\n                            <IconButton aria-label='settings'>\n                              <Profil\n                                visitor={props.id}\n                                visited={el.id}\n                                element={el}\n                              />\n                            </IconButton>\n                          }\n                          title={el.userName}\n                          subheader={el.firstName + ' ' + el.lastName}\n                        />\n                        <CardContent>\n                          <Typography variant=\"h5\" style={{color:\"purple\"}}>connected</Typography>\n                          <Typography variant='h6'>Biography :</Typography>\n                          <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                          >\n                            {el.bio}\n                          </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                          <IconButton\n                            aria-label='add to favorites'\n                            onClick={(event) =>\n                              handelLike(event, props.id, el.id)\n                            }\n                          >\n                            <Favorite style={{ color: 'green' }} />\n                          </IconButton>\n                          <IconButton\n                            className={clsx(classes.expand)}\n                            aria-label='NotInterested'\n                            onClick={(event) =>\n                              handelDeslike(event, props.id, el.id)\n                            }\n                          >\n                            <ThumbDownIcon color='secondary' />\n                          </IconButton>\n                        </CardActions>\n                      </Card>\n                    </Box>\n                  )\n                })\n                .splice(0, 20)}\n          </Grid>\n        </Container>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Browsing","/Users/anelamra/Desktop/matcha/client/src/component/profil/Home.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/editProfill.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/setting.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/history/history.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/chat/ChatBox.js",["153","154","155"],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/filter.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/sort.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/profil.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/map.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/search.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/myAddImages.js",["156"],"import React from 'react'\nimport Axios from 'axios'\nimport Size from '../helpers/size'\nimport { Grid, Card, CardMedia } from '@material-ui/core'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { IoMdAddCircle } from 'react-icons/io'\nimport { useState, useRef, useEffect } from 'react'\n\nconst intialItems = [\n  {\n    id: '0',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '1',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '2',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '3',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '4',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n]\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 600,\n  },\n  media: {\n    height: 600,\n    width: 400,\n  },\n  big: {\n    position: 'relative',\n    backgroundColor: '#E0E4E9',\n    width: '200px',\n    height: '300px',\n    borderRadius: '10px',\n    border: '2px solid white',\n  },\n  addCircle: {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    color: 'pink',\n    width: '40px',\n    height: '40px',\n  },\n}))\n\nconst MyAddImages = (props) => {\n  const classes = useStyles()\n  const [Items, UpdateItems] = useState(intialItems)\n  const imageRefs = useRef([])\n  const [ProfileImg, SetProfileImg] = useState(null)\n  const ProfImgRef = useRef(null)\n  const [effect, triggerEffect] = useState(false)\n  // const [isDD, SetIsDD] = useState(true);\n  // const [disabled, SetDisabled] = useState(true);\n\n  imageRefs.current = []\n\n  const addToRefs = (el) => {\n    if (el && !imageRefs.current.includes(el)) {\n      imageRefs.current.push(el)\n    }\n  }\n\n  // display of images\n\n  const displayProfileImg = React.useCallback(() => {\n    if (ProfileImg != null) {\n      var ProfileImgDiv = ProfImgRef.current\n      ProfileImgDiv.style.background = 'url(' + ProfileImg + ')'\n      ProfileImgDiv.style.backgroundSize = '400px 600px'\n    }\n  }, [ProfileImg])\n\n  useEffect(() => {\n    displayProfileImg()\n  }, [displayProfileImg])\n\n  //////////////////////////\n\n  // count of images\n\n  const fetchImgs = React.useCallback(async () => {\n    let s = await Axios.post(`/base/img/fetch/${props.id}`, {\n      userId: props.id,\n    }).then((res) => {\n      if (res.data.s === 1) return true\n      else return false\n    })\n    return s\n  })\n\n  useEffect(() => {\n    fetchImgs().then((res) => {\n      if (res) props.checkTotalImg()\n    })\n    // if (fetchImgs())\n    //   props.checkTotalImg()\n  }, [fetchImgs, props])\n\n  ////////////////////////////\n\n  const triggerInput = (index) => {\n    if (imageRefs.current[index]) {\n      imageRefs.current[index].click()\n    }\n  }\n\n  const handleChange = async (event, id, index) => {\n    if (event.target.files[0]) {\n      var value = URL.createObjectURL(event.target.files[0])\n      if (index === 0) {\n        SetProfileImg(value)\n      }\n      triggerEffect(!effect)\n      if (value != null) {\n        var tmp = Items\n        tmp[index].value = value\n        UpdateItems(tmp)\n        const gridId = imageRefs.current[index].id + 'img'\n        const grid = document.getElementById(gridId)\n        grid.style.background = 'url(' + value + ')'\n        grid.style.backgroundSize = '200px 300px'\n      }\n    }\n\n    event.preventDefault()\n    var formData = new FormData()\n    formData.set('index', index)\n    formData.set('userId', props.id)\n    formData.set('file', event.target.files[0])\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    }\n    await Axios.post(`base/img/${props.id}`, formData, config)\n  }\n\n  async function handleOnDragEnd(result) {\n    if (!result.destination) return\n    const items = Array.from(Items)\n    const [reorderedItem] = items.splice(result.source.index, 1)\n    items.splice(result.destination.index, 0, reorderedItem)\n    UpdateItems(items)\n    items.map((el, index) => {\n      if (index === 0 && el.value !== '') {\n        SetProfileImg(el.value)\n      }\n      return null\n    })\n    await Axios.post(`base/img/dnd/${props.id}`, {\n      index: result.source.index,\n      id: result.destination.index,\n    })\n  }\n\n  return (\n    <Size>\n      <Grid container>\n        <div style={{ overflowY: 'scroll', height: '600px' }}>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId='items'>\n              {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {Items.map(({ id }, index) => {\n                    return (\n                      <Draggable\n                        // isDragDisabled={isDD}\n                        key={id}\n                        draggableId={id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            id={id + 'img'}\n                            className={classes.big}\n                            onClick={() => {\n                              triggerInput(index)\n                            }}\n                          >\n                            <input\n                              name='file'\n                              // accept=\".gif,.jpg,.jpeg,.png\"\n                              ref={addToRefs}\n                              onChange={(e) => {\n                                handleChange(e, id, index)\n                              }}\n                              hidden\n                              id={id}\n                              type='file'\n                            />\n                            {provided.placeholder}\n                            <IoMdAddCircle className={classes.addCircle} />\n                          </div>\n                        )}\n                      </Draggable>\n                    )\n                  })}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n        {/* <div\n          ref={ProfImgRef}\n          style={{ width: \"400px\", height: \"600px\", border: \"1px black solid\" }}\n          >\n        </div> */}\n        <Card className={classes.root}>\n          <CardMedia\n            image=\"https://raw.githubusercontent.com/hassanreus/img/master/profilImageManWomen.jpg\"\n            title='Contemplative Reptile'\n            // style={{ width: \"400px\", height: \"600px\" }}\n            ref={ProfImgRef}\n            className={classes.media}\n          />\n        </Card>\n      </Grid>\n    </Size>\n  )\n}\n\nexport default MyAddImages\n","/Users/anelamra/Desktop/matcha/client/src/component/profil/fillProfil.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/geo.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/chat/LeftSection.js",["157","158","159","160","161","162"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { StylesProvider , makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Grid, Tabs, Tab, AppBar, Paper, List ,ListItem ,ListItemSecondaryAction ,ListItemText ,ListItemAvatar ,Checkbox ,Avatar, Badge, Hidden } from '@material-ui/core';\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n      backgroundColor: '#44b700',\n      color: '#44b700',\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        animation: '$ripple 1.2s infinite ease-in-out',\n        border: '1px solid currentColor',\n        content: '\"\"',\n      },\n    },\n    '@keyframes ripple': {\n      '0%': {\n        transform: 'scale(.8)',\n        opacity: 1,\n      },\n      '100%': {\n        transform: 'scale(2.4)',\n        opacity: 0,\n      },\n    },\n  }))(Badge);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  console.log(\"props\", props);\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  Left: {\n    backgroundColor: theme.palette.background.paper,\n    // width: 500\n    height: \"70vh\"\n  }\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  \n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n      <div className={classes.Left}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Chats\" {...a11yProps(0)} />\n            <Tab label=\"People(matched)\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            Conversations.....\n          </TabPanel>\n          <TabPanel id=\"99909090090\" value={value} index={1} dir={theme.direction}>\n            <div>\n\n          <List id=\"0101010\">\n            {\n              props.people.map((item, index) => {\n                const {userName, id, image} = item;\n                const labelId = `checkbox-list-secondary-label-${index}`;\n                return (\n                  <ListItem key={index} onClick={() => {props.passHisInfos({userName:userName, id:id, image:image})}}>\n                         <ListItemAvatar>\n                         <StyledBadge                      \n                          overlap=\"circle\"\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          variant=\"dot\">\n                             <Avatar\n                                 alt={`${userName} picture`}\n                                 src={`http://localhost:3001/${image}`}\n                                 />\n                             </StyledBadge>\n                         </ListItemAvatar>\n                         <ListItemText id={labelId} primary={userName} />\n                     </ListItem>   \n                    );\n                  })\n                }\n            </List>\n                </div>\n          </TabPanel>\n        </SwipeableViews>\n      </div>\n  );\n}\n",{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":94,"column":9,"nodeType":"169","messageId":"170","endLine":94,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":4,"column":16,"nodeType":"169","messageId":"170","endLine":4,"endColumn":20},{"ruleId":"167","severity":1,"message":"172","line":4,"column":22,"nodeType":"169","messageId":"170","endLine":4,"endColumn":25},{"ruleId":"167","severity":1,"message":"173","line":4,"column":27,"nodeType":"169","messageId":"170","endLine":4,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":4,"column":35,"nodeType":"169","messageId":"170","endLine":4,"endColumn":40},{"ruleId":"167","severity":1,"message":"175","line":4,"column":42,"nodeType":"169","messageId":"170","endLine":4,"endColumn":46},{"ruleId":"167","severity":1,"message":"176","line":4,"column":48,"nodeType":"169","messageId":"170","endLine":4,"endColumn":56},{"ruleId":"167","severity":1,"message":"177","line":4,"column":58,"nodeType":"169","messageId":"170","endLine":4,"endColumn":81},{"ruleId":"167","severity":1,"message":"178","line":4,"column":83,"nodeType":"169","messageId":"170","endLine":4,"endColumn":95},{"ruleId":"167","severity":1,"message":"179","line":4,"column":97,"nodeType":"169","messageId":"170","endLine":4,"endColumn":111},{"ruleId":"167","severity":1,"message":"180","line":4,"column":113,"nodeType":"169","messageId":"170","endLine":4,"endColumn":121},{"ruleId":"167","severity":1,"message":"181","line":4,"column":123,"nodeType":"169","messageId":"170","endLine":4,"endColumn":129},{"ruleId":"167","severity":1,"message":"182","line":4,"column":138,"nodeType":"169","messageId":"170","endLine":4,"endColumn":144},{"ruleId":"167","severity":1,"message":"183","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"184","line":13,"column":7,"nodeType":"169","messageId":"170","endLine":13,"endColumn":18},{"ruleId":"167","severity":1,"message":"185","line":47,"column":20,"nodeType":"169","messageId":"170","endLine":47,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":60,"column":17,"nodeType":"188","messageId":"189","endLine":60,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":91,"column":6,"nodeType":"192","endLine":91,"endColumn":16,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":107,"column":35,"nodeType":"196","endLine":107,"endColumn":48},{"ruleId":"167","severity":1,"message":"197","line":11,"column":3,"nodeType":"169","messageId":"170","endLine":11,"endColumn":8},{"ruleId":"167","severity":1,"message":"168","line":37,"column":11,"nodeType":"169","messageId":"170","endLine":37,"endColumn":17},{"ruleId":"190","severity":1,"message":"198","line":42,"column":8,"nodeType":"192","endLine":42,"endColumn":24,"suggestions":"199"},{"ruleId":"190","severity":1,"message":"200","line":52,"column":8,"nodeType":"192","endLine":52,"endColumn":10,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"202","line":109,"column":21,"nodeType":"203","endLine":109,"endColumn":38},{"ruleId":"167","severity":1,"message":"204","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":24},{"ruleId":"167","severity":1,"message":"205","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":14},{"ruleId":"167","severity":1,"message":"174","line":7,"column":35,"nodeType":"169","messageId":"170","endLine":7,"endColumn":40},{"ruleId":"167","severity":1,"message":"177","line":7,"column":58,"nodeType":"169","messageId":"170","endLine":7,"endColumn":81},{"ruleId":"167","severity":1,"message":"180","line":7,"column":113,"nodeType":"169","messageId":"170","endLine":7,"endColumn":121},{"ruleId":"167","severity":1,"message":"182","line":7,"column":138,"nodeType":"169","messageId":"170","endLine":7,"endColumn":144},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","'Tabs' is defined but never used.","'Tab' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Checkbox' is defined but never used.","'Avatar' is defined but never used.","'Hidden' is defined but never used.","'makeStyles' is defined but never used.","'StyledBadge' is assigned a value but never used.","'xx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.id' and 'saveMyInfos'. Either include them or remove the dependency array.","ArrayExpression",["208"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Badge' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["209"],"React Hook React.useEffect has missing dependencies: 'props.hisInfos.id' and 'props.id'. Either include them or remove the dependency array.",["210"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'StylesProvider' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [props.id, saveMyInfos, stopLoop]",{"range":"217","text":"218"},"Update the dependencies array to be: [props.hisInfos, props.id]",{"range":"219","text":"220"},"Update the dependencies array to be: [props.hisInfos.id, props.id]",{"range":"221","text":"222"},[2454,2464],"[props.id, saveMyInfos, stopLoop]",[1132,1148],"[props.hisInfos, props.id]",[1565,1567],"[props.hisInfos.id, props.id]"]
[{"/root/Desktop/matcha/client/src/index.js":"1","/root/Desktop/matcha/client/src/App.js":"2","/root/Desktop/matcha/client/src/start/theme.js":"3","/root/Desktop/matcha/client/src/history/history.js":"4","/root/Desktop/matcha/client/src/start/init.js":"5","/root/Desktop/matcha/client/src/start/SocketContext.js":"6","/root/Desktop/matcha/client/src/component/auth/Valid.js":"7","/root/Desktop/matcha/client/src/component/forget/sendForget.js":"8","/root/Desktop/matcha/client/src/component/forget/forget.js":"9","/root/Desktop/matcha/client/src/component/auth/Sign-in.js":"10","/root/Desktop/matcha/client/src/component/auth/Login.js":"11","/root/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js":"12","/root/Desktop/matcha/client/src/start/IntraSvg.js":"13","/root/Desktop/matcha/client/src/component/helpers/size.js":"14","/root/Desktop/matcha/client/src/component/chat/Chat.js":"15","/root/Desktop/matcha/client/src/component/profil/Home.js":"16","/root/Desktop/matcha/client/src/component/profil/setting.js":"17","/root/Desktop/matcha/client/src/component/history/history.js":"18","/root/Desktop/matcha/client/src/component/browsing/browsing.js":"19","/root/Desktop/matcha/client/src/component/profil/editProfill.js":"20","/root/Desktop/matcha/client/src/component/allProfil/likeProfil.js":"21","/root/Desktop/matcha/client/src/component/chat/ChatBox.js":"22","/root/Desktop/matcha/client/src/component/chat/LeftSection.js":"23","/root/Desktop/matcha/client/src/component/browsing/filter.js":"24","/root/Desktop/matcha/client/src/component/browsing/sort.js":"25","/root/Desktop/matcha/client/src/component/browsing/map.js":"26","/root/Desktop/matcha/client/src/component/browsing/search.js":"27","/root/Desktop/matcha/client/src/component/forget/editPassword.js":"28","/root/Desktop/matcha/client/src/component/profil/geo.js":"29","/root/Desktop/matcha/client/src/component/profil/fillProfil.js":"30","/root/Desktop/matcha/client/src/component/profil/myAddImages.js":"31","/root/Desktop/matcha/client/src/component/browsing/report.js":"32","/root/Desktop/matcha/client/src/component/browsing/profil.js":"33","/root/Desktop/matcha/client/src/component/profil/alertDialog.js":"34"},{"size":663,"mtime":1615496517571,"results":"35","hashOfConfig":"36"},{"size":248,"mtime":1615496517571,"results":"37","hashOfConfig":"36"},{"size":141,"mtime":1615496517571,"results":"38","hashOfConfig":"36"},{"size":87,"mtime":1615496517571,"results":"39","hashOfConfig":"36"},{"size":2401,"mtime":1615496517571,"results":"40","hashOfConfig":"36"},{"size":103,"mtime":1615496517571,"results":"41","hashOfConfig":"36"},{"size":954,"mtime":1615496517571,"results":"42","hashOfConfig":"36"},{"size":3257,"mtime":1615496517571,"results":"43","hashOfConfig":"36"},{"size":3362,"mtime":1615496517571,"results":"44","hashOfConfig":"36"},{"size":11661,"mtime":1615496517571,"results":"45","hashOfConfig":"36"},{"size":11000,"mtime":1615496517571,"results":"46","hashOfConfig":"36"},{"size":11660,"mtime":1615499854795,"results":"47","hashOfConfig":"36"},{"size":6687,"mtime":1615496517571,"results":"48","hashOfConfig":"36"},{"size":399,"mtime":1615496517571,"results":"49","hashOfConfig":"36"},{"size":3045,"mtime":1615496517571,"results":"50","hashOfConfig":"36"},{"size":5367,"mtime":1615496517571,"results":"51","hashOfConfig":"36"},{"size":147,"mtime":1615496517571,"results":"52","hashOfConfig":"36"},{"size":1466,"mtime":1615496517571,"results":"53","hashOfConfig":"36"},{"size":9206,"mtime":1615496517571,"results":"54","hashOfConfig":"36"},{"size":14972,"mtime":1615496517571,"results":"55","hashOfConfig":"36"},{"size":15025,"mtime":1615496517571,"results":"56","hashOfConfig":"36"},{"size":6211,"mtime":1615501831427,"results":"57","hashOfConfig":"36"},{"size":4481,"mtime":1615496517571,"results":"58","hashOfConfig":"36"},{"size":2646,"mtime":1615496517571,"results":"59","hashOfConfig":"36"},{"size":1193,"mtime":1615496517571,"results":"60","hashOfConfig":"36"},{"size":3986,"mtime":1615496517571,"results":"61","hashOfConfig":"36"},{"size":6066,"mtime":1615496517571,"results":"62","hashOfConfig":"36"},{"size":4664,"mtime":1615496517571,"results":"63","hashOfConfig":"36"},{"size":3938,"mtime":1615496517571,"results":"64","hashOfConfig":"36"},{"size":12007,"mtime":1615496517571,"results":"65","hashOfConfig":"36"},{"size":11121,"mtime":1615496517571,"results":"66","hashOfConfig":"36"},{"size":2534,"mtime":1615496517571,"results":"67","hashOfConfig":"36"},{"size":12761,"mtime":1615496517571,"results":"68","hashOfConfig":"36"},{"size":1265,"mtime":1615496517571,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"iwojjv",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/root/Desktop/matcha/client/src/index.js",[],["144","145"],"/root/Desktop/matcha/client/src/App.js",[],"/root/Desktop/matcha/client/src/start/theme.js",[],"/root/Desktop/matcha/client/src/history/history.js",[],"/root/Desktop/matcha/client/src/start/init.js",[],"/root/Desktop/matcha/client/src/start/SocketContext.js",[],"/root/Desktop/matcha/client/src/component/auth/Valid.js",[],"/root/Desktop/matcha/client/src/component/forget/sendForget.js",[],"/root/Desktop/matcha/client/src/component/forget/forget.js",[],"/root/Desktop/matcha/client/src/component/auth/Sign-in.js",[],"/root/Desktop/matcha/client/src/component/auth/Login.js",[],"/root/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js",["146"],"import React from \"react\"\nimport Axios from \"axios\"\nimport { withRouter, Switch, Route } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport \"../../../start/styles.css\"\nimport {\n  Typography,\n  Toolbar,\n  AppBar,\n  CssBaseline,\n  Divider,\n  List,\n  IconButton,\n  Hidden,\n  Drawer,\n  ListItemText,\n  ListItemIcon,\n  ListItem,\n  // Badge\n} from \"@material-ui/core\"\nimport {\n  Menu as MenuIcon,\n  // LocationOn\n} from \"@material-ui/icons\"\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\"\nimport { FaHome, FaHistory, FaHotjar, FaRegSun,FaUsers } from \"react-icons/fa\"\nimport { RiLogoutCircleLine } from \"react-icons/ri\"\nimport { AiFillMessage } from 'react-icons/ai'\nimport Chat from '../../chat/Chat'\nimport Browsing from '../../browsing/browsing'\nimport Home from \"../../profil/Home\"\nimport EditProfil from \"../../profil/editProfill\"\nimport Setting from \"../../profil/setting\"\nimport History from \"../../history/history\"\nimport AllProfil from \"../../allProfil/likeProfil\"\nimport SocketContext from \"../../../start/SocketContext\";\n\nconst instance = Axios.create({ withCredentials: true });\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n  },\n  ty: {\n    flexGrow: 1,\n    fontFamily: \"Comfortaa\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\n// anass part :\n// notification\n\n///////////////////////////////// Big steps ///////////////////////////////////////////////////////////\n// un utilisateur qui ne possede pas de photo ne doit pas pouvoir liker le profil d'une auter utilisateur\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////////// try to do /////////////////////////////////////////////////////////////////\n// print images in drop so that can help to delete them\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n// implimantation active users .............................///////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n// check all route with post man //////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////// tag error man ba3d .... //////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst ResponsiveDrawer = (props) => {\n  const { history, window } = props\n  const classes = useStyles()\n  const theme = useTheme()\n  const [mobileOpen, setMobileOpen] = React.useState(false)\n  const [id, setId] = React.useState(0)\n  const [lat, setLat] = React.useState(false)\n  const [long, setLong] = React.useState(false)\n  const [requiredProfilInfo, setRPI] = React.useState('')\n  const [didMount, setDidMount] = React.useState(false)\n  const socket = React.useContext(SocketContext);\n  //\n  const [userInf, setUserInf] = React.useState({});\n//\n// socket connected to set active users ////////////////////////////////////////////////////////\n  // React.useEffect(() => {\n  //   if (id){\n  //     socket.emit(\"active\", id)\n  //   }\n  // }, [socket, id])\n\n  React.useEffect(() => {\n        socket.emit('join', {key: userInf.userName});\n  })\n\n  function isEmpty(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return true\n  }\n\n  const saveMyInfos = (value) => {\n    if (isEmpty(userInf))\n      setUserInf(value);\n  }\n  // console.log('3333333', userInf)\n  React.useEffect(() => {\n    if(id)\n    {\n\n      Axios.post('http://localhost:3001/chat/getConnectedUserInfos', { userId: id })\n      .then((res) => {\n        // if(!MyInfos)\n        if (res) {\n          saveMyInfos(res.data.myInfos);\n        }\n        \n      }).catch((err) => { console.log(err) })\n    }\n  }, [id])\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n  function success(pos) {\n    setLat(pos.coords.latitude)\n    setLong(pos.coords.longitude)\n    if (id1) navigator.geolocation.clearWatch(id1)\n  }\n\n  const options = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 0,\n  }\n\n  let id1 = navigator.geolocation.getCurrentPosition(success, () => {}, options)\n\n  const func = React.useCallback(async () => {\n    if (!didMount){\n      const CancelToken = Axios.CancelToken\n      const source = CancelToken.source()\n      let { data } = await instance.get('http://localhost:3001/base', {\n        cancelToken: source.token,\n      })\n      setId(data.user.id)\n      return () => {\n        if (source) source.cancel('test')\n      }\n    }\n  }, [didMount])\n\n  React.useEffect(() => {\n    func()\n    if (id !== 0) {\n      instance\n        .post('http://localhost:3001/user/userInfoVerification', { userId: id })\n        .then((res) => {\n          if (res.data.status === true) {\n            setRPI(true)\n          } else setRPI(false)\n        })\n    }\n    setDidMount(true)\n    return () => {\n      setDidMount(false)\n    }\n  }, [func, props, id])\n\n  const getLocIp = React.useCallback(() => {\n    // get locallization with help of ip\n    Axios.get('https://api.ipify.org?format=json').then(async (res) => {\n      await Axios.get(`http://ip-api.com/json/${res.data.ip}`).then((res) => {\n        setLat(res.data.lat)\n        setLong(res.data.lon)\n      })\n      if (id) Axios.post(`base/localisation/${id}`, { lat: lat, long: long })\n    })\n  }, [id, lat, long])\n\n  React.useEffect(() => {\n    // tal l push\n    // if (lat === false && long === false)\n    //   getLocIp()\n  }, [lat, long, getLocIp])\n\n  React.useEffect(() => {\n    if (lat !== false && long !== false && id)\n      Axios.post(`base/localisation/${id}`, { lat: lat, long: long })\n    \n    setDidMount(true)\n    return () => {\n      setDidMount(false)\n    }\n  }, [id, lat, long])\n\n  const handelLogout = () => {\n    socket.disconnect()\n    instance.post('http://localhost:3001/logout')\n    props.logout()\n  }\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen)\n  }\n\n  const itemsListOne = [\n    {\n      id: 0,\n      text: 'Home',\n      icon: <FaHome />,\n      onClick: () => history.push('/'),\n      hidden: true,\n      disabled: requiredProfilInfo,\n    },\n    {\n      id: 1,\n      text: 'browsing',\n      icon: <FaHotjar />,\n      onClick: () => history.push(`/browsing/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 3,\n      text: 'Setting',\n      icon: <FaRegSun />,\n      onClick: () => history.push(`/edit/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 4,\n      text: 'History',\n      icon: <FaHistory />,\n      onClick: () => history.push(`/history/${id}`),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 5,\n      text: 'Profil',\n      icon: <FaUsers />,\n      onClick: () => history.push('/allProfil'),\n      disabled: !requiredProfilInfo,\n    },\n    {\n      id: 6,\n      text: 'Chat',\n      icon: <AiFillMessage />,\n      onClick: () => history.push('/chat'),\n      disabled: !requiredProfilInfo,\n    },\n  ]\n  const itemsListTwo = [\n    {\n      id: 100,\n      text: 'Logout',\n      icon: <RiLogoutCircleLine />,\n      onClick: () => {\n        handelLogout()\n      },\n    },\n  ]\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List key={Math.random()}>\n        {itemsListOne.map((item, index) => {\n          const { id, text, icon, onClick, disabled, hidden } = item\n          if (!hidden) {\n            return (\n              <ListItem button key={id} disabled={disabled} onClick={onClick}>\n                <ListItemText key={id + Math.random()} primary={text} />\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\n              </ListItem>\n            )\n          }\n          return <React.Fragment key={Math.random()}></React.Fragment>\n        })}\n      </List>\n      <Divider />\n      <List key={Math.random()}>\n        {itemsListTwo.map((item, index) => {\n          const { id, text, icon, onClick } = item\n          return (\n            <ListItem button key={id} onClick={onClick}>\n              <ListItemText key={id + Math.random()} primary={text} />\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined\n\n  if (!didMount) {\n    return null\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color='secondary'\n            aria-label='open drawer'\n            edge='start'\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.ty} variant='h6' noWrap>\n            Matcha\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label='mailbox folders'>\n        <Hidden smUp implementation='css'>\n          <Drawer\n            container={container}\n            variant='temporary'\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation='css'>\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant='permanent'\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route\n            exact\n            path='/edit/:id'\n            render={(props) => <EditProfil id={id} />}\n          />\n          <Route exact path='/chat' render={(props) => <Chat id={id} />} />\n          <Route\n            exact\n            path='/browsing/:id'\n            render={(props) => <Browsing id={id} />}\n          />\n          <Route exact path='/history/:id' component={History} />\n          <Route\n            exact\n            path='/setting'\n            component={(props) => <Setting id={id} />}\n          />\n          <Route\n            exact\n            path='/allProfil'\n            component={(props) => <AllProfil id={id} />}\n          />\n          {requiredProfilInfo === true ? (\n            <Route exact path='/' render={(props) => <Browsing id={id} />} />\n          ) : (\n            <Route exact path='/*' render={(props) => <Home id={id} />} />\n          )}\n        </Switch>\n      </main>\n    </div>\n  )\n};\n\nResponsiveDrawer.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default withRouter(ResponsiveDrawer);\n","/root/Desktop/matcha/client/src/start/IntraSvg.js",[],"/root/Desktop/matcha/client/src/component/helpers/size.js",[],"/root/Desktop/matcha/client/src/component/chat/Chat.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"import React from \"react\";\nimport Axios from \"axios\";\nimport ChatBox from \"./ChatBox\";\nimport { Grid, Tabs, Tab, AppBar, Paper, List, ListItem, ListItemSecondaryAction, ListItemText, ListItemAvatar, Checkbox, Avatar, Badge, Hidden } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core';\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport FullWidthTabs from \"./LeftSection\";\nimport \"./LeftSectionStyle.css\";\n\n// we have to get id of connected user & email of user to cha with;\n// ids will make the room's name\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst ChatList = (props) => {\n\n  const [people, setPeople] = React.useState([]);\n  const [hisInfos, setHisInfos] = React.useState({});\n  const [myInfos, setMyInfos] = React.useState({});\n  const [stopLoop, xx] = React.useState('');\n\n  function isEmpty(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n  }\n\n  const saveMyInfos = (value) => {\n    if (isEmpty != false)\n      setMyInfos(value);\n  }\n  const passHisInfos = (x) => {\n    setHisInfos(x);\n  }\n\n  // getting people matched with (id, userName, profilPicture);\n\n  React.useEffect(() => {\n    Axios.post('http://localhost:3001/chat/getConnectedUserInfos', { userId: props.id })\n      .then((res) => {\n        // if(!MyInfos)\n        if (res) {\n          saveMyInfos(res.data.myInfos);\n        }\n\n      }).catch((err) => { console.log(err) })\n\n    Axios.post('http://localhost:3001/chat/people', { userId: props.id })\n      .then((res) => {\n        if (res.data.boards) {\n          var result = res.data.boards\n          console.log('boards', result);\n          console.log('...boards', ...result);\n          setPeople([...result]);\n\n        }\n      }).catch((err) => { console.log(err) })\n    //\n\n  }, [stopLoop])\n\n  // console.log(\"*******\", hisInfos);\n\n  return (\n    <StylesProvider injectFirst>\n      <div>\n        <Grid container spacing={1} style={{ background: '#EEEEEE', height: '70vh' }}>\n          <Grid item md={3}>\n            <FullWidthTabs people={people} passHisInfos={passHisInfos} />\n\n          </Grid>\n          <Grid item md={9}>\n            <ChatBox\n              id={props.id}\n              myInfos={myInfos}\n              hisInfos={hisInfos} id={props.id}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </StylesProvider>\n  )\n}\n\nexport default ChatList;","/root/Desktop/matcha/client/src/component/profil/Home.js",["165","166","167"],"import React  from \"react\"\nimport Axios from 'axios'\nimport { CircularProgress, Stepper, Step, StepLabel, Button, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport FillProfil from './fillProfil'\nimport MyAddImages from './myAddImages'\nimport history from '../../history/history'\n\n\n\n// const triggerInput = (index) => {\n//   // console.log(printImages.split(',').length <= index)\n//   // if (printImages.split(',').length <= index) {\n//   //   console.log(\"test\")\n//   // }\n//   if (imageRefs.current[index]) {\n//     imageRefs.current[index].click()\n//   }\n// }\n\n\n\n{/* (printImages.split(',').length > index) || (imageRefs.current[index].id) ? <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, index)} /> */ }\n{/* <IoMdAddCircle className={classes.addCircle} /> */}\n{/* {printImages.split(',').length <= index ? <IoMdAddCircle className={classes.addCircle} /> : <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, index)} />} */ }\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Add Images\", \"Fill Profile Informations\"];\n}\n\nfunction getStepContent(step, props, checkTI, checkNo) {\n  switch (step) {\n    case 0:\n      return (\n        <MyAddImages id={props.id} checkTotalImg={checkTI} />\n      )\n    case 1:\n      return (\n        <FillProfil id={props.id} checkTotalImg={checkTI} checkFill={checkNo} />\n      )\n    default:\n      return 'Unknown step'\n  }\n}\n\nconst HorizontalLinearStepper = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [stepOneFilled, setStepOneFilled] = React.useState('no')\n  // const [activeSkip, setActiveSkip] = React.useState(false)\n  const [progress, setprogress] = React.useState(false)\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleReset = (e, id) => {\n    Axios.post(`/base/dltImg/${id}`).then((res) => {\n      if (res.data.status) setActiveStep(0)\n    })\n  };\n\n  const handleDone = (e, id) => {\n    Axios.post(`/base/status/${id}`)\n    history.push(`/edit/${id}`)\n  }\n\n  const checkTotalImg = () => {\n    setStepOneFilled('yes');\n  }\n\n  const fillProfil = () => {\n    setStepOneFilled('no')\n  }\n\n  // const skipBtnSkip = () => {\n  //   setActiveSkip(true)\n  // }\n\n  const reloadFunc = React.useCallback(() => {\n    if (activeStep === 0 && props.id) {\n      // IF YOU WANT TO DELETE IMAGES OF USERS IN FIRST EVENT\n      // Axios.post(`/base/onlyImg/${props.id}`)\n      \n    }\n  }, [activeStep, props])\n\n  React.useEffect(() => {\n    reloadFunc()\n    setStepOneFilled('no')\n  }, [reloadFunc])\n\n  // check if data is already filled\n\n  const funProgress = React.useCallback(async () => {\n    if (props.id){\n      await Axios.post(`/base/check1/${props.id}`)\n      setprogress(true)\n    }else\n      setprogress(false)\n  }, [props])\n\n  React.useEffect(() => {\n    funProgress()\n  }, [funProgress, progress])\n\n  return (\n    \n  <div className={classes.root}>\n    {progress === false ? <CircularProgress disableShrink /> : \n      <React.Fragment>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            return (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            )\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography\n                component={'span'}\n                variant={'body2'}\n                className={classes.instructions}\n              >\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button\n                onClick={(event) => handleReset(event, props.id)}\n                className={classes.button}\n              >\n                Reset\n              </Button>\n              <Button\n                onClick={(event) => handleDone(event, props.id)}\n                className={classes.button}\n                color='primary'\n              >\n                Done\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography\n                component={'span'}\n                variant={'body2'}\n                className={classes.instructions}\n              >\n                {getStepContent(\n                  activeStep,\n                  props,\n                  checkTotalImg,\n                  fillProfil\n                  // skipBtnSkip\n                )}\n              </Typography>\n              <div>\n                \n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={handleNext}\n                  className={classes.button}\n                  disabled={stepOneFilled === 'no' ? true : false}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    }\n    </div>\n  )\n}\n\nexport default HorizontalLinearStepper","/root/Desktop/matcha/client/src/component/profil/setting.js",[],"/root/Desktop/matcha/client/src/component/history/history.js",[],"/root/Desktop/matcha/client/src/component/browsing/browsing.js",[],"/root/Desktop/matcha/client/src/component/profil/editProfill.js",[],"/root/Desktop/matcha/client/src/component/allProfil/likeProfil.js",[],"/root/Desktop/matcha/client/src/component/chat/ChatBox.js",["168","169","170","171","172"],"/root/Desktop/matcha/client/src/component/chat/LeftSection.js",["173","174","175","176","177","178"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { StylesProvider , makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Grid, Tabs, Tab, AppBar, Paper, List ,ListItem ,ListItemSecondaryAction ,ListItemText ,ListItemAvatar ,Checkbox ,Avatar, Badge, Hidden } from '@material-ui/core';\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n      backgroundColor: '#44b700',\n      color: '#44b700',\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        animation: '$ripple 1.2s infinite ease-in-out',\n        border: '1px solid currentColor',\n        content: '\"\"',\n      },\n    },\n    '@keyframes ripple': {\n      '0%': {\n        transform: 'scale(.8)',\n        opacity: 1,\n      },\n      '100%': {\n        transform: 'scale(2.4)',\n        opacity: 0,\n      },\n    },\n  }))(Badge);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  // console.log(\"props\", props);\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  Left: {\n    backgroundColor: theme.palette.background.paper,\n    // width: 500\n    height: \"70vh\"\n  }\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  \n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n      <div className={classes.Left}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Chats\" {...a11yProps(0)} />\n            <Tab label=\"People(matched)\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            Conversations.....\n          </TabPanel>\n          <TabPanel id=\"99909090090\" value={value} index={1} dir={theme.direction}>\n            <div>\n\n          <List id=\"0101010\">\n            {\n              props.people.map((item, index) => {\n                const {userName, id, image} = item;\n                const labelId = `checkbox-list-secondary-label-${index}`;\n                return (\n                  <ListItem key={index} onClick={() => {props.passHisInfos({userName:userName, id:id, image:image})}}>\n                         <ListItemAvatar>\n                         <StyledBadge                      \n                          overlap=\"circle\"\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          variant=\"dot\">\n                             <Avatar\n                                 alt={`${userName} picture`}\n                                 src={`http://localhost:3001/${image}`}\n                                 />\n                             </StyledBadge>\n                         </ListItemAvatar>\n                         <ListItemText id={labelId} primary={userName} />\n                     </ListItem>   \n                    );\n                  })\n                }\n            </List>\n                </div>\n          </TabPanel>\n        </SwipeableViews>\n      </div>\n  );\n}\n","/root/Desktop/matcha/client/src/component/browsing/filter.js",[],"/root/Desktop/matcha/client/src/component/browsing/sort.js",[],"/root/Desktop/matcha/client/src/component/browsing/map.js",[],"/root/Desktop/matcha/client/src/component/browsing/search.js",[],"/root/Desktop/matcha/client/src/component/forget/editPassword.js",[],"/root/Desktop/matcha/client/src/component/profil/geo.js",[],"/root/Desktop/matcha/client/src/component/profil/fillProfil.js",[],"/root/Desktop/matcha/client/src/component/profil/myAddImages.js",["179","180","181","182","183"],"import React from 'react'\nimport Axios from 'axios'\nimport Size from '../helpers/size'\nimport { Grid, Card, CardMedia } from '@material-ui/core'\nimport { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { IoMdAddCircle, IoIosRemoveCircleOutline } from 'react-icons/io'\nimport { useEffect } from 'react'\nimport AlertDialoge from './alertDialog'\n\nconst intialItems = [\n  {\n    id: '0',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '1',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '2',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '3',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '4',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n]\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 600,\n  },\n  media: {\n    height: 600,\n    width: 400,\n  },\n  big: {\n    position: 'relative',\n    backgroundColor: '#E0E4E9',\n    width: '200px',\n    height: '300px',\n    borderRadius: '10px',\n    border: '2px solid white',\n  },\n  addCircle: {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    color: 'pink',\n    width: '40px',\n    height: '40px',\n  },\n  media1: {\n    width: '200px',\n    height: '300px',\n  },\n}))\n\nconst MyAddImages = (props) => {\n  const classes = useStyles()\n  const [Items, UpdateItems] = React.useState(intialItems)\n  const imageRefs = React.useRef([])\n  const [ProfileImg, SetProfileImg] = React.useState(null)\n  const ProfImgRef = React.useRef(null)\n  const [effect, triggerEffect] = React.useState(false)\n  const [printImages, setprintImages] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n  const [keyIndex, setKeyIndex] = React.useState()\n\n  const handleClickOpen = (index) => {\n    setKeyIndex(index)\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  imageRefs.current = []\n\n  const addToRefs = (el) => {\n    if (el && !imageRefs.current.includes(el)) {\n      imageRefs.current.push(el)\n    }\n  }\n\n  // display images inside dragar\n\n  React.useEffect(() => {\n      Axios.post(`/base/displayIndrager/${props.id}`).then((res) => {\n        if (!printImages.length && res.data.images[0] !== null)\n          setprintImages(res.data.images[0].split(','))\n      })\n  }, [props, printImages])\n\n  \n\n  React.useEffect(() => {\n    if (printImages !== \"\"){\n      printImages.map((el, iKey) => {\n        let srcImg = `http://localhost:3001/${el}`\n        if (iKey === 0) {\n          SetProfileImg(srcImg)\n        }\n        triggerEffect(!effect)\n        if (srcImg != null) {\n          var tmp = Items\n          tmp[iKey].value = srcImg\n          UpdateItems(tmp)\n          const gridId = imageRefs.current[iKey].id + 'img'\n          const grid = document.getElementById(gridId)\n          grid.style.background = 'url(' + srcImg + ')'\n          grid.style.backgroundSize = '200px 300px'\n        }\n      })\n    }\n  }, [printImages])\n\n  // display of images\n\n  const displayProfileImg = React.useCallback(() => {\n    if (ProfileImg != null) {\n      var ProfileImgDiv = ProfImgRef.current\n      ProfileImgDiv.style.background = 'url(' + ProfileImg + ')'\n      ProfileImgDiv.style.backgroundSize = '400px 600px'\n    }\n  }, [ProfileImg])\n\n  useEffect(() => {\n    displayProfileImg()\n  }, [displayProfileImg])\n\n  //////////////////////////\n\n  // count of images\n\n  const fetchImgs = React.useCallback(async () => {\n    let s = await Axios.post(`/base/img/fetch/${props.id}`, {\n      userId: props.id,\n    }).then((res) => {\n      if (res.data.s === 1) return true\n      else return false\n    })\n    return s\n  }, [props])\n\n  useEffect(() => {\n    fetchImgs().then((res) => {\n      if (res) props.checkTotalImg()\n    })\n    if (ProfileImg) props.checkTotalImg()\n  }, [fetchImgs, props, ProfileImg])\n\n  ////////////////////////////\n\n  const handleInsUpd = () => {\n    triggerInput(keyIndex)\n    setOpen(false)\n  }\n\n  const triggerInput = (index) => {\n    if (imageRefs.current[index]) {\n      imageRefs.current[index].click()\n    }\n  }\n\n  const handleChange = async (event, id, index) => {\n    if (event.target.files[0]) {\n      var value = URL.createObjectURL(event.target.files[0])\n      if (index === 0) {\n        SetProfileImg(value)\n      }\n      triggerEffect(!effect)\n      if (value != null) {\n        var tmp = Items\n        tmp[index].value = value\n        UpdateItems(tmp)\n        const gridId = imageRefs.current[index].id + 'img'\n        const grid = document.getElementById(gridId)\n        grid.style.background = 'url(' + value + ')'\n        grid.style.backgroundSize = '200px 300px'\n      }\n    }\n\n    event.preventDefault()\n    var formData = new FormData()\n    formData.set('index', index)\n    formData.set('userId', props.id)\n    formData.set('file', event.target.files[0])\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    }\n    await Axios.post(`base/img/${props.id}`, formData, config)\n  }\n\n  async function handleOnDragEnd(result) {\n    if (!result.destination) return\n    const items = Array.from(Items)\n    const [reorderedItem] = items.splice(result.source.index, 1)\n    items.splice(result.destination.index, 0, reorderedItem)\n    UpdateItems(items)\n    items.map((el, index) => {\n      if (index === 0 && el.value !== '') {\n        SetProfileImg(el.value)\n      }\n      return null\n    })\n    await Axios.post(`base/img/dnd/${props.id}`, {\n      index: result.source.index,\n      id: result.destination.index,\n    })\n  }\n\n  const handleDeleteDialog = () => {\n    handelRemoveImg(keyIndex)\n    setOpen(false)\n  }\n\n  const handelRemoveImg = async (key) => {\n    console.log(printImages[key])\n    if (printImages[key] === undefined){\n      await Axios.post(`/base/displayIndrager/${props.id}`).then((res) => {\n        if (res.data.images[0] !== null){\n          res.data.images[0].split(',').map((el, Keyi) => {\n            if (key === Keyi)\n              Axios.post(`base/dltImgUser/${props.id}`, {image: el})\n          })\n        }\n      })\n    }else{\n      if (Items[key].value !== '' && key !== 0){\n        // if (key === 0) {\n        //   SetProfileImg('https://raw.githubusercontent.com/hassanreus/img/master/profilImageManWomen.jpg')\n        // }\n        var tmp = Items\n        tmp[key].value = ''\n        UpdateItems(tmp)\n        const gridId = imageRefs.current[key].id + 'img'\n        const grid = document.getElementById(gridId)\n        grid.style.background = 'url() #E0E4E9'\n        grid.style.backgroundSize = '200px 300px'\n        await Axios.post(`base/dltImgUser/${props.id}`, {image: printImages[key]})\n        const newList = printImages.filter((item, _key) => key !== _key)\n        // console.log(newList)\n        setprintImages(newList)\n      }\n    }\n  }\n\n  return (\n    <Size>\n      <Grid container>\n        {/* {printImages !== \"\" && printImages.split(',').length >= 0\n          ? printImages.split(',').map((el, iKey) => {\n              let srcImg = `http://localhost:3001/${el}`\n              let altImg = `display all image loop${iKey}`\n              return (\n                <div key={iKey} className={classes.big}>\n                  <CardMedia\n                    className={classes.media1}\n                    image={srcImg}\n                    title={altImg}\n                  />\n                  <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, iKey)}/>\n                </div>\n              )\n            })\n          : ''} */}\n        <div style={{ overflowY: 'scroll', height: '600px' }}>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId='items'>\n              {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {Items.map(({ id }, index) => {\n                    return (\n                      <Draggable\n                        // isDragDisabled={isDD}\n                        key={id}\n                        draggableId={id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            id={id + 'img'}\n                            className={classes.big}\n                            onClick={() => {handleClickOpen(index)}}\n                          >\n                            <input\n                              name='file'\n                              // accept=\".gif,.jpg,.jpeg,.png\"\n                              ref={addToRefs}\n                              onChange={(e) => {\n                                handleChange(e, id, index)\n                              }}\n                              hidden\n                              id={id}\n                              type='file'\n                            />\n                            {provided.placeholder}\n                            {/* {console.log(Object.keys(printImages.split(',')))}\n                            {Object.keys(printImages.split(',')) <= index ? <IoMdAddCircle className={classes.addCircle} /> : <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, id)} />} */}\n                            <IoMdAddCircle className={classes.addCircle} />\n                          </div>\n                        )}\n                      </Draggable>\n                    )\n                  })}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Choose your action:\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={handleInsUpd} color=\"primary\">\n              Insert/Update\n          </Button>\n            <Button onClick={handleDeleteDialog} color=\"secondary\" autoFocus>\n              Delete\n          </Button>\n          </DialogActions>\n        </Dialog>\n        {/* <div\n          ref={ProfImgRef}\n          style={{ width: \"400px\", height: \"600px\", border: \"1px black solid\" }}\n          >\n        </div> */}\n        <Card className={classes.root}>\n          <CardMedia\n            image='https://raw.githubusercontent.com/hassanreus/img/master/profilImageManWomen.jpg'\n            title='Contemplative Reptile'\n            // style={{ width: \"400px\", height: \"600px\" }}\n            ref={ProfImgRef}\n            className={classes.media}\n          />\n        </Card>\n      </Grid>\n    </Size>\n  )\n}\n\nexport default MyAddImages\n","/root/Desktop/matcha/client/src/component/browsing/report.js",[],"/root/Desktop/matcha/client/src/component/browsing/profil.js",[],"/root/Desktop/matcha/client/src/component/profil/alertDialog.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":151,"column":6,"nodeType":"190","endLine":151,"endColumn":10,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":4,"column":16,"nodeType":"194","messageId":"195","endLine":4,"endColumn":20},{"ruleId":"192","severity":1,"message":"196","line":4,"column":22,"nodeType":"194","messageId":"195","endLine":4,"endColumn":25},{"ruleId":"192","severity":1,"message":"197","line":4,"column":27,"nodeType":"194","messageId":"195","endLine":4,"endColumn":33},{"ruleId":"192","severity":1,"message":"198","line":4,"column":35,"nodeType":"194","messageId":"195","endLine":4,"endColumn":40},{"ruleId":"192","severity":1,"message":"199","line":4,"column":42,"nodeType":"194","messageId":"195","endLine":4,"endColumn":46},{"ruleId":"192","severity":1,"message":"200","line":4,"column":48,"nodeType":"194","messageId":"195","endLine":4,"endColumn":56},{"ruleId":"192","severity":1,"message":"201","line":4,"column":58,"nodeType":"194","messageId":"195","endLine":4,"endColumn":81},{"ruleId":"192","severity":1,"message":"202","line":4,"column":83,"nodeType":"194","messageId":"195","endLine":4,"endColumn":95},{"ruleId":"192","severity":1,"message":"203","line":4,"column":97,"nodeType":"194","messageId":"195","endLine":4,"endColumn":111},{"ruleId":"192","severity":1,"message":"204","line":4,"column":113,"nodeType":"194","messageId":"195","endLine":4,"endColumn":121},{"ruleId":"192","severity":1,"message":"205","line":4,"column":123,"nodeType":"194","messageId":"195","endLine":4,"endColumn":129},{"ruleId":"192","severity":1,"message":"206","line":4,"column":138,"nodeType":"194","messageId":"195","endLine":4,"endColumn":144},{"ruleId":"192","severity":1,"message":"207","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":20},{"ruleId":"192","severity":1,"message":"208","line":13,"column":7,"nodeType":"194","messageId":"195","endLine":13,"endColumn":18},{"ruleId":"192","severity":1,"message":"209","line":47,"column":20,"nodeType":"194","messageId":"195","endLine":47,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":60,"column":17,"nodeType":"212","messageId":"213","endLine":60,"endColumn":19},{"ruleId":"188","severity":1,"message":"214","line":91,"column":6,"nodeType":"190","endLine":91,"endColumn":16,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":107,"column":35,"nodeType":"218","endLine":107,"endColumn":48},{"ruleId":"219","severity":1,"message":"220","line":23,"column":1,"nodeType":"221","messageId":"222","endLine":23,"endColumn":194},{"ruleId":"219","severity":1,"message":"220","line":24,"column":1,"nodeType":"221","messageId":"222","endLine":24,"endColumn":56},{"ruleId":"219","severity":1,"message":"220","line":25,"column":1,"nodeType":"221","messageId":"222","endLine":25,"endColumn":212},{"ruleId":"210","severity":1,"message":"211","line":79,"column":50,"nodeType":"212","messageId":"213","endLine":79,"endColumn":52},{"ruleId":"188","severity":1,"message":"223","line":92,"column":12,"nodeType":"190","endLine":92,"endColumn":28,"suggestions":"224"},{"ruleId":"188","severity":1,"message":"225","line":115,"column":12,"nodeType":"190","endLine":115,"endColumn":14,"suggestions":"226"},{"ruleId":"210","severity":1,"message":"211","line":131,"column":45,"nodeType":"212","messageId":"213","endLine":131,"endColumn":47},{"ruleId":"210","severity":1,"message":"227","line":135,"column":53,"nodeType":"212","messageId":"213","endLine":135,"endColumn":55},{"ruleId":"192","severity":1,"message":"228","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":24},{"ruleId":"192","severity":1,"message":"229","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":14},{"ruleId":"192","severity":1,"message":"198","line":7,"column":35,"nodeType":"194","messageId":"195","endLine":7,"endColumn":40},{"ruleId":"192","severity":1,"message":"201","line":7,"column":58,"nodeType":"194","messageId":"195","endLine":7,"endColumn":81},{"ruleId":"192","severity":1,"message":"204","line":7,"column":113,"nodeType":"194","messageId":"195","endLine":7,"endColumn":121},{"ruleId":"192","severity":1,"message":"206","line":7,"column":138,"nodeType":"194","messageId":"195","endLine":7,"endColumn":144},{"ruleId":"192","severity":1,"message":"230","line":8,"column":25,"nodeType":"194","messageId":"195","endLine":8,"endColumn":49},{"ruleId":"192","severity":1,"message":"231","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":20},{"ruleId":"232","severity":1,"message":"233","line":120,"column":34,"nodeType":"234","messageId":"235","endLine":120,"endColumn":36},{"ruleId":"188","severity":1,"message":"236","line":137,"column":6,"nodeType":"190","endLine":137,"endColumn":19,"suggestions":"237"},{"ruleId":"232","severity":1,"message":"233","line":246,"column":56,"nodeType":"234","messageId":"235","endLine":246,"endColumn":58},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'saveMyInfos'. Either include it or remove the dependency array.","ArrayExpression",["240"],"no-unused-vars","'Tabs' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Checkbox' is defined but never used.","'Avatar' is defined but never used.","'Hidden' is defined but never used.","'makeStyles' is defined but never used.","'StyledBadge' is assigned a value but never used.","'xx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'props.id' and 'saveMyInfos'. Either include them or remove the dependency array.",["241"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook React.useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["242"],"React Hook React.useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["243"],"Expected '===' and instead saw '=='.","'StylesProvider' is defined but never used.","'Grid' is defined but never used.","'IoIosRemoveCircleOutline' is defined but never used.","'AlertDialoge' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has missing dependencies: 'Items' and 'effect'. Either include them or remove the dependency array. You can also do a functional update 'triggerEffect(e => ...)' if you only need 'effect' in the 'triggerEffect' call.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [id, saveMyInfos]",{"range":"255","text":"256"},"Update the dependencies array to be: [props.id, saveMyInfos, stopLoop]",{"range":"257","text":"258"},"Update the dependencies array to be: [props.hisInfos, props.id]",{"range":"259","text":"260"},"Update the dependencies array to be: [socket]",{"range":"261","text":"262"},"Update the dependencies array to be: [Items, effect, printImages]",{"range":"263","text":"264"},[4534,4538],"[id, saveMyInfos]",[2454,2464],"[props.id, saveMyInfos, stopLoop]",[2534,2550],"[props.hisInfos, props.id]",[3387,3389],"[socket]",[3255,3268],"[Items, effect, printImages]"]
[{"/Users/anelamra/Desktop/matcha/client/src/index.js":"1","/Users/anelamra/Desktop/matcha/client/src/App.js":"2","/Users/anelamra/Desktop/matcha/client/src/history/history.js":"3","/Users/anelamra/Desktop/matcha/client/src/start/theme.js":"4","/Users/anelamra/Desktop/matcha/client/src/start/init.js":"5","/Users/anelamra/Desktop/matcha/client/src/start/SocketContext.js":"6","/Users/anelamra/Desktop/matcha/client/src/component/auth/Login.js":"7","/Users/anelamra/Desktop/matcha/client/src/component/auth/Sign-in.js":"8","/Users/anelamra/Desktop/matcha/client/src/component/auth/Valid.js":"9","/Users/anelamra/Desktop/matcha/client/src/component/forget/forget.js":"10","/Users/anelamra/Desktop/matcha/client/src/component/forget/sendForget.js":"11","/Users/anelamra/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js":"12","/Users/anelamra/Desktop/matcha/client/src/start/IntraSvg.js":"13","/Users/anelamra/Desktop/matcha/client/src/component/helpers/size.js":"14","/Users/anelamra/Desktop/matcha/client/src/component/chat/Chat.js":"15","/Users/anelamra/Desktop/matcha/client/src/component/history/history.js":"16","/Users/anelamra/Desktop/matcha/client/src/component/browsing/browsing.js":"17","/Users/anelamra/Desktop/matcha/client/src/component/allProfil/likeProfil.js":"18","/Users/anelamra/Desktop/matcha/client/src/component/profil/Home.js":"19","/Users/anelamra/Desktop/matcha/client/src/component/profil/editProfill.js":"20","/Users/anelamra/Desktop/matcha/client/src/component/profil/setting.js":"21","/Users/anelamra/Desktop/matcha/client/src/component/chat/ChatBox.js":"22","/Users/anelamra/Desktop/matcha/client/src/component/browsing/filter.js":"23","/Users/anelamra/Desktop/matcha/client/src/component/chat/LeftSection.js":"24","/Users/anelamra/Desktop/matcha/client/src/component/browsing/sort.js":"25","/Users/anelamra/Desktop/matcha/client/src/component/browsing/profil.js":"26","/Users/anelamra/Desktop/matcha/client/src/component/browsing/map.js":"27","/Users/anelamra/Desktop/matcha/client/src/component/browsing/search.js":"28","/Users/anelamra/Desktop/matcha/client/src/component/forget/editPassword.js":"29","/Users/anelamra/Desktop/matcha/client/src/component/profil/geo.js":"30","/Users/anelamra/Desktop/matcha/client/src/component/profil/fillProfil.js":"31","/Users/anelamra/Desktop/matcha/client/src/component/profil/myAddImages.js":"32","/Users/anelamra/Desktop/matcha/client/src/component/browsing/report.js":"33","/Users/anelamra/Desktop/matcha/client/src/component/profil/alertDialog.js":"34","/Users/anelamra/Desktop/matcha/client/src/component/Notifications/PopOver.js":"35","/Users/anelamra/Desktop/matcha/client/src/component/layout/res/Notifications.js":"36"},{"size":663,"mtime":1615641198000,"results":"37","hashOfConfig":"38"},{"size":248,"mtime":1615641197000,"results":"39","hashOfConfig":"38"},{"size":87,"mtime":1615641198000,"results":"40","hashOfConfig":"38"},{"size":141,"mtime":1615641198000,"results":"41","hashOfConfig":"38"},{"size":2401,"mtime":1615641198000,"results":"42","hashOfConfig":"38"},{"size":103,"mtime":1615641198000,"results":"43","hashOfConfig":"38"},{"size":11000,"mtime":1615641197000,"results":"44","hashOfConfig":"38"},{"size":11661,"mtime":1615641197000,"results":"45","hashOfConfig":"38"},{"size":954,"mtime":1615641197000,"results":"46","hashOfConfig":"38"},{"size":3362,"mtime":1615641198000,"results":"47","hashOfConfig":"38"},{"size":3257,"mtime":1615641198000,"results":"48","hashOfConfig":"38"},{"size":11894,"mtime":1615653613000,"results":"49","hashOfConfig":"38"},{"size":6687,"mtime":1615641198000,"results":"50","hashOfConfig":"38"},{"size":399,"mtime":1615641198000,"results":"51","hashOfConfig":"38"},{"size":3045,"mtime":1615641198000,"results":"52","hashOfConfig":"38"},{"size":1466,"mtime":1615641198000,"results":"53","hashOfConfig":"38"},{"size":9630,"mtime":1615646796000,"results":"54","hashOfConfig":"38"},{"size":15025,"mtime":1615641197000,"results":"55","hashOfConfig":"38"},{"size":5367,"mtime":1615641198000,"results":"56","hashOfConfig":"38"},{"size":14972,"mtime":1615641198000,"results":"57","hashOfConfig":"38"},{"size":147,"mtime":1615641198000,"results":"58","hashOfConfig":"38"},{"size":6214,"mtime":1615642459000,"results":"59","hashOfConfig":"38"},{"size":2646,"mtime":1615641198000,"results":"60","hashOfConfig":"38"},{"size":4481,"mtime":1615641198000,"results":"61","hashOfConfig":"38"},{"size":1193,"mtime":1615641198000,"results":"62","hashOfConfig":"38"},{"size":12761,"mtime":1615641198000,"results":"63","hashOfConfig":"38"},{"size":3986,"mtime":1615641198000,"results":"64","hashOfConfig":"38"},{"size":6066,"mtime":1615641198000,"results":"65","hashOfConfig":"38"},{"size":4664,"mtime":1615641198000,"results":"66","hashOfConfig":"38"},{"size":3938,"mtime":1615641198000,"results":"67","hashOfConfig":"38"},{"size":12007,"mtime":1615641198000,"results":"68","hashOfConfig":"38"},{"size":11121,"mtime":1615641198000,"results":"69","hashOfConfig":"38"},{"size":2534,"mtime":1615641198000,"results":"70","hashOfConfig":"38"},{"size":1265,"mtime":1615641198000,"results":"71","hashOfConfig":"38"},{"size":1288,"mtime":1615643502000,"results":"72","hashOfConfig":"38"},{"size":1319,"mtime":1615655500000,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"60t8g0",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anelamra/Desktop/matcha/client/src/index.js",[],["153","154"],"/Users/anelamra/Desktop/matcha/client/src/App.js",[],"/Users/anelamra/Desktop/matcha/client/src/history/history.js",[],"/Users/anelamra/Desktop/matcha/client/src/start/theme.js",[],"/Users/anelamra/Desktop/matcha/client/src/start/init.js",[],"/Users/anelamra/Desktop/matcha/client/src/start/SocketContext.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/auth/Login.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/auth/Sign-in.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/auth/Valid.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/forget/forget.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/forget/sendForget.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/layout/res/ResponsiveDrawer.js",["155","156","157"],"/Users/anelamra/Desktop/matcha/client/src/start/IntraSvg.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/helpers/size.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/chat/Chat.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React from \"react\";\nimport Axios from \"axios\";\nimport ChatBox from \"./ChatBox\";\nimport { Grid, Tabs, Tab, AppBar, Paper, List, ListItem, ListItemSecondaryAction, ListItemText, ListItemAvatar, Checkbox, Avatar, Badge, Hidden } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core';\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport FullWidthTabs from \"./LeftSection\";\nimport \"./LeftSectionStyle.css\";\n\n// we have to get id of connected user & email of user to cha with;\n// ids will make the room's name\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst ChatList = (props) => {\n\n  const [people, setPeople] = React.useState([]);\n  const [hisInfos, setHisInfos] = React.useState({});\n  const [myInfos, setMyInfos] = React.useState({});\n  const [stopLoop, xx] = React.useState('');\n\n  function isEmpty(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n  }\n\n  const saveMyInfos = (value) => {\n    if (isEmpty != false)\n      setMyInfos(value);\n  }\n  const passHisInfos = (x) => {\n    setHisInfos(x);\n  }\n\n  // getting people matched with (id, userName, profilPicture);\n\n  React.useEffect(() => {\n    Axios.post('http://localhost:3001/chat/getConnectedUserInfos', { userId: props.id })\n      .then((res) => {\n        // if(!MyInfos)\n        if (res) {\n          saveMyInfos(res.data.myInfos);\n        }\n\n      }).catch((err) => { console.log(err) })\n\n    Axios.post('http://localhost:3001/chat/people', { userId: props.id })\n      .then((res) => {\n        if (res.data.boards) {\n          var result = res.data.boards\n          console.log('boards', result);\n          console.log('...boards', ...result);\n          setPeople([...result]);\n\n        }\n      }).catch((err) => { console.log(err) })\n    //\n\n  }, [stopLoop])\n\n  // console.log(\"*******\", hisInfos);\n\n  return (\n    <StylesProvider injectFirst>\n      <div>\n        <Grid container spacing={1} style={{ background: '#EEEEEE', height: '70vh' }}>\n          <Grid item md={3}>\n            <FullWidthTabs people={people} passHisInfos={passHisInfos} />\n\n          </Grid>\n          <Grid item md={9}>\n            <ChatBox\n              id={props.id}\n              myInfos={myInfos}\n              hisInfos={hisInfos} id={props.id}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </StylesProvider>\n  )\n}\n\nexport default ChatList;","/Users/anelamra/Desktop/matcha/client/src/component/history/history.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/browsing.js",["176","177"],"import React from 'react'\nimport Axios from 'axios'\n// import moment from 'moment'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\nimport Filter from './filter'\nimport SortComponent from './sort'\nimport clsx from 'clsx'\nimport Profil from './profil'\nimport Map from \"./map\"\nimport Search from './search'\nimport {\n  Card, CardHeader, CardContent, CardActions,Badge,\n  // Collapse,\n  Avatar, IconButton, Typography, Container, Grid\n} from '@material-ui/core'\nimport {\n  Favorite,\n  ThumbDown as ThumbDownIcon,\n  SkipNext as SkipNextIcon,\n} from '@material-ui/icons'\nimport SocketContext from \"../../start/SocketContext\";\nimport PopOver from \"../Notifications/PopOver\";\n// import SocketContext from \"../../start/SocketContext\";\n\nconst StyledBadge = withStyles((theme) => ({\n  // badge: (props) => \n  //   props.status === \"true\"\n  //   ? {\n  //       backgroundColor: '#A9A9A9',\n  //       boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n  //       '&::after': {\n  //         border: '1px',\n  //       },\n  //     }\n  //   : {\n  //       backgroundColor: '#44b700',\n  //       color: '#44b700',\n  //       boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n  //     },\n}))(Badge)\n\nconst useStyles = makeStyles((theme) => ({\n  diva: {\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    height: '100vh',\n  },\n  container: {\n    fontFamily: 'Comfortaa',\n\n  },\n  copy: {\n    // [theme.breakpoints.up(\"lg\")]: {\n    //   marginLeft: theme.spacing(70),\n    // },\n    textAlign: 'center',\n  },\n  root: {\n    // height: '35vh',\n    // width: '50vh',\n    backgroundColor: '#FFFAFA',\n    color: '#778899',\n    boxShadow: `10px 10px 10px #A9A9A9`,\n    maxWidth: 395,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  media1: {\n    width: '2vw',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  date: {\n    paddingRight: '13vw'\n  },\n}))\n\nconst Browsing = (props) => {\n  const [cord, setCord] = React.useState([])\n  const [gender, setGender] = React.useState('')\n  const classes = useStyles()\n  const [list, setList] = React.useState([])\n  const [list1, setList1] = React.useState([])\n  // const [status, setStatus] = React.useState(\"true\")\n  // const [curTime, setcurTime] = React.useState()\n  const [didMount, setDidMount] = React.useState(false)\n  // const [active, setActive] = React.useState(\"\")\n  // const socket = React.useContext(SocketContext);\n  // new Date().toLocaleString()\n\n  \n  const socket = React.useContext(SocketContext);\n  \n  const getLocalisation = React.useCallback(async () => {\n    await Axios.post(`/browsing/geo/${props.id}`).then((res) => {\n      setGender(res.data.type)\n      setCord(res.data.geo)\n    })\n  }, [props.id])\n  \n  React.useEffect(() => {\n    if (cord.length) {\n      Axios.post(`/browsing/${props.id}`, {\n        cord: cord,\n        gender: gender,\n      }).then((res) => {\n        console.log(res.data)\n        if (res.data){\n          setList(res.data)\n          setList1(res.data)  \n        }\n      })\n    } else getLocalisation()\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, [cord, gender, getLocalisation, props.id])\n  \n  const handelLike = (event, idLiker, idLiked, userNameLiker, userNameLiked) => {\n    event.preventDefault()\n    Axios.post(`/browsing/likes/${idLiker}`, {idLiked: idLiked}).then(res => {\n      if (res.data.status) {\n        const newList = list1.filter((item) => item.id !== idLiked)\n        setList1(newList)\n        // like Notif\n        socket.emit('new_like', {userNameLiker : userNameLiker, userNameLiked : userNameLiked});\n      }\n    })\n  }\n  \n  console.log('-_- ', props)\n\n  const handelSkip = (event, idLiked) => {\n    event.preventDefault()\n    const newList = list1.filter((item) => item.id !== idLiked)\n    setList1(newList)\n    if (list1.length === 1)\n    getLocalisation()\n  }\n  \n  \n  const handelDeslike = (event, idLiker, idLiked) => {\n    event.preventDefault()\n    Axios.post(`/browsing/deslike/${idLiker}`, {idLiked: idLiked}).then(res => {\n      if (res.data.status) {\n        const newList = list1.filter((item) => item.id !== idLiked)\n        setList1(newList)\n      }\n    })\n  }\n\n  // mochkiill to solve\n\n  // const handelClick = async (e) => {\n  //   console.log(e)\n  //   // if (status === 'true'){\n  //   //   setStatus('false')\n  //   //   setcurTime()\n  //   // }else{\n  //   //   setStatus('true')\n  //   //   setcurTime(new Date())\n  //   // }\n\n  //   await socket.on(\"getActive\", (data) => {\n  //     console.log(data)\n  //     // if (data !== \"\")\n  //     //   setActive(data)\n  //   })\n  // }\n  \n  // React.useEffect(() => {\n  //   console.log(active)\n  //   if (active === props.id.toString()) {\n  //     console.log(active)\n  //     setStatus('false')\n  //     setcurTime()\n  //   }\n  // }, [active, props])\n\n  if (!didMount)\n    return null\n\n  return (\n    <div className={classes.diva}>\n      <Grid\n        container\n        className={classes.container}\n        justify='center'\n        alignItems='center'\n      >\n        <Grid item xs={12} sm={2}>\n          <SortComponent setList={setList1} list={list1} />\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Map list={list} />\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <Search\n            setList={setList}\n            setList1={setList1}\n            cord={cord}\n            gender={gender}\n            id={props.id}\n          />\n        </Grid>\n        <Grid item xs={12} sm={5}>\n          <Filter setList1={setList1} list={list} />\n        </Grid>\n        <Container className={classes.copy} component='main' fixed disableGutters>\n        {list1 &&\n            list1\n              .map((el, key) => {\n                const imageProfil = el.images.split(',')\n                return (\n                  <Card className={classes.root} key={key}>\n                    <CardHeader\n                      avatar={\n                        <StyledBadge\n                          overlap='circle'\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          variant='dot'\n                          // status={status}\n                        >\n                          <Avatar\n                            aria-label='recipe'\n                            src={`http://localhost:3001/${imageProfil[0]}`}\n                            alt={`test${imageProfil[0]}`}\n                          />\n                        </StyledBadge>\n                      }\n                      action={\n                        <IconButton aria-label='settings'>\n                          <Profil\n                            visitor={props.id}\n                            visited={el.id}\n                            element={el}\n                            list={list1}\n                            setlist={setList1}\n                            StyledBadge={StyledBadge}\n                            // status={status}\n                            // curTime={curTime}\n                          />\n                        </IconButton>\n                      }\n                      title={el.userName}\n                      subheader={el.firstName + ' ' + el.lastName}\n                    />\n                    {/* {curTime && (\n                      <Typography\n                        variant='body2'\n                        display='initial'\n                        className={classes.date}\n                      >\n                        Last Seen {moment(curTime).fromNow()}\n                      </Typography>\n                    )} */}\n                    {/* <button onClick={handelClick}>Click</button> */}\n                    <CardContent>\n                      <Typography variant='h6'>Biography :</Typography>\n                      <Typography\n                        variant='body2'\n                        color='textSecondary'\n                        component='p'\n                      >\n                        {el.bio}\n                      </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                      <IconButton\n                        aria-label='add to favorites'\n                        onClick={(event) =>\n                          handelLike(event, props.id, el.id, props.myInfos.userName, el.userName)\n                        }\n                      >\n                        <Favorite style={{ color: 'green' }} />\n                      </IconButton>\n                      <IconButton\n                        aria-label='skip'\n                        onClick={(event) => handelSkip(event, el.id)}\n                      >\n                        <SkipNextIcon style={{ color: 'DarkBlue' }} />\n                      </IconButton>\n                      <IconButton\n                        className={clsx(classes.expand)}\n                        aria-label='NotInterested'\n                        onClick={(event) =>\n                          handelDeslike(event, props.id, el.id)\n                        }\n                      >\n                        <ThumbDownIcon color='secondary' />\n                      </IconButton>\n                    </CardActions>\n                  </Card>\n                )\n              })\n              .splice(0, 20)}\n        </Container>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Browsing","/Users/anelamra/Desktop/matcha/client/src/component/allProfil/likeProfil.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/Home.js",["178","179","180"],"import React  from \"react\"\nimport Axios from 'axios'\nimport { CircularProgress, Stepper, Step, StepLabel, Button, Typography } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport FillProfil from './fillProfil'\nimport MyAddImages from './myAddImages'\nimport history from '../../history/history'\n\n\n\n// const triggerInput = (index) => {\n//   // console.log(printImages.split(',').length <= index)\n//   // if (printImages.split(',').length <= index) {\n//   //   console.log(\"test\")\n//   // }\n//   if (imageRefs.current[index]) {\n//     imageRefs.current[index].click()\n//   }\n// }\n\n\n\n{/* (printImages.split(',').length > index) || (imageRefs.current[index].id) ? <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, index)} /> */ }\n{/* <IoMdAddCircle className={classes.addCircle} /> */}\n{/* {printImages.split(',').length <= index ? <IoMdAddCircle className={classes.addCircle} /> : <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, index)} />} */ }\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Add Images\", \"Fill Profile Informations\"];\n}\n\nfunction getStepContent(step, props, checkTI, checkNo) {\n  switch (step) {\n    case 0:\n      return (\n        <MyAddImages id={props.id} checkTotalImg={checkTI} />\n      )\n    case 1:\n      return (\n        <FillProfil id={props.id} checkTotalImg={checkTI} checkFill={checkNo} />\n      )\n    default:\n      return 'Unknown step'\n  }\n}\n\nconst HorizontalLinearStepper = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [stepOneFilled, setStepOneFilled] = React.useState('no')\n  // const [activeSkip, setActiveSkip] = React.useState(false)\n  const [progress, setprogress] = React.useState(false)\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleReset = (e, id) => {\n    Axios.post(`/base/dltImg/${id}`).then((res) => {\n      if (res.data.status) setActiveStep(0)\n    })\n  };\n\n  const handleDone = (e, id) => {\n    Axios.post(`/base/status/${id}`)\n    history.push(`/edit/${id}`)\n  }\n\n  const checkTotalImg = () => {\n    setStepOneFilled('yes');\n  }\n\n  const fillProfil = () => {\n    setStepOneFilled('no')\n  }\n\n  // const skipBtnSkip = () => {\n  //   setActiveSkip(true)\n  // }\n\n  const reloadFunc = React.useCallback(() => {\n    if (activeStep === 0 && props.id) {\n      // IF YOU WANT TO DELETE IMAGES OF USERS IN FIRST EVENT\n      // Axios.post(`/base/onlyImg/${props.id}`)\n      \n    }\n  }, [activeStep, props])\n\n  React.useEffect(() => {\n    reloadFunc()\n    setStepOneFilled('no')\n  }, [reloadFunc])\n\n  // check if data is already filled\n\n  const funProgress = React.useCallback(async () => {\n    if (props.id){\n      await Axios.post(`/base/check1/${props.id}`)\n      setprogress(true)\n    }else\n      setprogress(false)\n  }, [props])\n\n  React.useEffect(() => {\n    funProgress()\n  }, [funProgress, progress])\n\n  return (\n    \n  <div className={classes.root}>\n    {progress === false ? <CircularProgress disableShrink /> : \n      <React.Fragment>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            return (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            )\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography\n                component={'span'}\n                variant={'body2'}\n                className={classes.instructions}\n              >\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button\n                onClick={(event) => handleReset(event, props.id)}\n                className={classes.button}\n              >\n                Reset\n              </Button>\n              <Button\n                onClick={(event) => handleDone(event, props.id)}\n                className={classes.button}\n                color='primary'\n              >\n                Done\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography\n                component={'span'}\n                variant={'body2'}\n                className={classes.instructions}\n              >\n                {getStepContent(\n                  activeStep,\n                  props,\n                  checkTotalImg,\n                  fillProfil\n                  // skipBtnSkip\n                )}\n              </Typography>\n              <div>\n                \n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={handleNext}\n                  className={classes.button}\n                  disabled={stepOneFilled === 'no' ? true : false}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    }\n    </div>\n  )\n}\n\nexport default HorizontalLinearStepper","/Users/anelamra/Desktop/matcha/client/src/component/profil/editProfill.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/setting.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/chat/ChatBox.js",["181","182","183","184","185"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Input, Grid } from '@material-ui/core/';\n// import MuiAlert from '@material-ui/lab/Alert';\nimport SocketContext from \"../../start/SocketContext\";\nimport Axios from \"axios\";\nimport \"./ChatBox.js\";\n// import { keys } from \"@material-ui/core/styles/createBreakpoints\";\n\n// import { io } from \"socket.io-client\";\n// const URL = \"http://localhost:3001\";\n// const socket = io(URL);\n\n\nconst useStyles = makeStyles(() => ({\n    chatBox: {\n        height: '100%',\n        backgroundColor: 'white',\n        position: \"relative\",\n    },\n    messages: {\n        padding: '14px',\n        // position: 'relaive',\n    },\n    textInput: {\n        position: \"absolute\",\n        bottom: 0,\n        color: 'purple',\n        width: '100%',\n    },\n    right: {\n        wordBreak: 'break-all',\n        padding: '10px',\n    },\n    left: {\n        wordBreak: 'break-all',\n        padding: '10px',\n    },\n    myText: {\n        width: 'fit-content',\n        borderRadius: '7px',\n        backgroundColor: '#e6b4e4',\n        padding: '10px',\n        float: 'right',\n    },\n    hisText: {\n        color: 'white',\n        width: 'fit-content',\n        borderRadius: '7px',\n        backgroundColor: '#000000a8',\n        padding: '10px',\n\n    },\n\n}));\nconst isEmpty = (obj) => {\n    for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            return false;\n        }\n    } return true;\n}\n\nconsole.log('123456879')\n\n\nconst ChatBox = (props) => {\n    const [conversation, setCoversation] = React.useState([]);\n    const classes = useStyles();\n\n    const socket = React.useContext(SocketContext);\n    \n    \n    React.useEffect(() => {\n        // console.log('IDIDIDIDIDI', props.id);\n        if (!isEmpty(props.hisInfos)) {\n            Axios.post('http://localhost:3001/chat/getConversation', { user1: props.id, user2: props.hisInfos.id })\n            .then((res) => {\n                    if (res.data.response.length != 0) {\n                        // console.log('resConv', res.data.response);\n                        setCoversation(res.data.response);\n                        // displayMessages(res.data.response, props.myInfos, props.hisInfos);\n                    }\n                    if (res.data.response === \"\") {\n                        setCoversation([]);\n                        // console.log(\"Say Hello\");\n                    }\n                })\n                .catch((err) => { console.log('ErR' + err) });\n            }\n            \n        }, [props.hisInfos])\n        \n        const sendMessage = (e) => {\n            e.preventDefault();\n            if (props.hisInfos) {\n                var input = document.getElementById('msg');\n                if (e.keyCode === 13 && input.value) {\n                    saveMessage(input.value);\n                    socket.emit('msg', {text:input.value, from: props.myInfos.userName, to: props.hisInfos.userName});\n                    input.value = '';\n                    // console.log('13');\n                }\n            } else {\n                console.log('cant find hisInfos')\n            }\n        }\n        React.useEffect(() => {\n            socket.on('new_msg', (data) => {\n                // alert(1)\n                console.log('--------------------------------------')\n                // console.log('Data', data);\n            });\n    \n        }, [])\n        \n        const saveMessage = (content) => {\n            Axios.post('http://localhost:3001/chat/saveMessage', { from: props.id, to: props.hisInfos.id, content: content })\n            .then((res) => {\n                // console.log(res);\n            }).catch((err) => { console.log(err) });\n    }\n\n    // console.log('len****', conversation);\n    // console.log('-props', props.hisInfos)\n    if (!isEmpty(props.hisInfos)) {\n        return (\n            <div className={classes.chatBox}>\n                <Grid container direction=\"column\" spacing={2} className=\"messages\">\n                    {\n                        conversation.length != 0 && (\n\n\n                            conversation.map((element) => {\n                                if (element.id_from == props.myInfos.id) {\n                                    return (\n                                        <Grid item container className={classes.me}>\n                                            <Grid item sm={4}></Grid>\n                                            <Grid item sm={8} className={classes.right}>\n                                                <div className={classes.myText}>\n                                                    {element.content}\n                                                </div>\n                                            </Grid>\n                                        </Grid>\n                                    )\n                                } else {\n                                    return (\n                                        <Grid item container className={classes.him}>\n                                            <Grid item sm={8} className={classes.left}>\n                                                <div className={classes.hisText}>\n                                                    {element.content}\n                                                </div>\n                                            </Grid>\n                                            <Grid item sm={4}></Grid>\n                                        </Grid>\n                                    )\n                                }\n                            })\n                        )\n                    }\n                    {\n                        !conversation.length && (\n                            <div>\n                                Say Hello\n                            </div>\n                        )\n                    }\n                </Grid>\n                <Input id=\"msg\" type=\"text\" className={classes.textInput} placeholder=\"Message\" onKeyUp={sendMessage} />\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div className={classes.chatBox}>\n                <p>select the user you want to chat with</p>\n            </div>\n        )\n    }\n}\n\nexport default ChatBox;","/Users/anelamra/Desktop/matcha/client/src/component/browsing/filter.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/chat/LeftSection.js",["186","187","188","189","190","191"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { StylesProvider , makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Grid, Tabs, Tab, AppBar, Paper, List ,ListItem ,ListItemSecondaryAction ,ListItemText ,ListItemAvatar ,Checkbox ,Avatar, Badge, Hidden } from '@material-ui/core';\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n      backgroundColor: '#44b700',\n      color: '#44b700',\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      '&::after': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        animation: '$ripple 1.2s infinite ease-in-out',\n        border: '1px solid currentColor',\n        content: '\"\"',\n      },\n    },\n    '@keyframes ripple': {\n      '0%': {\n        transform: 'scale(.8)',\n        opacity: 1,\n      },\n      '100%': {\n        transform: 'scale(2.4)',\n        opacity: 0,\n      },\n    },\n  }))(Badge);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  // console.log(\"props\", props);\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  Left: {\n    backgroundColor: theme.palette.background.paper,\n    // width: 500\n    height: \"70vh\"\n  }\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  \n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n      <div className={classes.Left}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"full width tabs example\"\n          >\n            <Tab label=\"Chats\" {...a11yProps(0)} />\n            <Tab label=\"People(matched)\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0} dir={theme.direction}>\n            Conversations.....\n          </TabPanel>\n          <TabPanel id=\"99909090090\" value={value} index={1} dir={theme.direction}>\n            <div>\n\n          <List id=\"0101010\">\n            {\n              props.people.map((item, index) => {\n                const {userName, id, image} = item;\n                const labelId = `checkbox-list-secondary-label-${index}`;\n                return (\n                  <ListItem key={index} onClick={() => {props.passHisInfos({userName:userName, id:id, image:image})}}>\n                         <ListItemAvatar>\n                         <StyledBadge                      \n                          overlap=\"circle\"\n                          anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                          }}\n                          variant=\"dot\">\n                             <Avatar\n                                 alt={`${userName} picture`}\n                                 src={`http://localhost:3001/${image}`}\n                                 />\n                             </StyledBadge>\n                         </ListItemAvatar>\n                         <ListItemText id={labelId} primary={userName} />\n                     </ListItem>   \n                    );\n                  })\n                }\n            </List>\n                </div>\n          </TabPanel>\n        </SwipeableViews>\n      </div>\n  );\n}\n","/Users/anelamra/Desktop/matcha/client/src/component/browsing/sort.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/profil.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/map.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/browsing/search.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/forget/editPassword.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/geo.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/fillProfil.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/myAddImages.js",["192","193","194","195","196"],"import React from 'react'\nimport Axios from 'axios'\nimport Size from '../helpers/size'\nimport { Grid, Card, CardMedia } from '@material-ui/core'\nimport { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { IoMdAddCircle, IoIosRemoveCircleOutline } from 'react-icons/io'\nimport { useEffect } from 'react'\nimport AlertDialoge from './alertDialog'\n\nconst intialItems = [\n  {\n    id: '0',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '1',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '2',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '3',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n  {\n    id: '4',\n    value: '',\n    isDragDisabled: true,\n    // isDropDisabled: true,\n    disabled: false,\n  },\n]\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 600,\n  },\n  media: {\n    height: 600,\n    width: 400,\n  },\n  big: {\n    position: 'relative',\n    backgroundColor: '#E0E4E9',\n    width: '200px',\n    height: '300px',\n    borderRadius: '10px',\n    border: '2px solid white',\n  },\n  addCircle: {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    color: 'pink',\n    width: '40px',\n    height: '40px',\n  },\n  media1: {\n    width: '200px',\n    height: '300px',\n  },\n}))\n\nconst MyAddImages = (props) => {\n  const classes = useStyles()\n  const [Items, UpdateItems] = React.useState(intialItems)\n  const imageRefs = React.useRef([])\n  const [ProfileImg, SetProfileImg] = React.useState(null)\n  const ProfImgRef = React.useRef(null)\n  const [effect, triggerEffect] = React.useState(false)\n  const [printImages, setprintImages] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n  const [keyIndex, setKeyIndex] = React.useState()\n\n  const handleClickOpen = (index) => {\n    setKeyIndex(index)\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  imageRefs.current = []\n\n  const addToRefs = (el) => {\n    if (el && !imageRefs.current.includes(el)) {\n      imageRefs.current.push(el)\n    }\n  }\n\n  // display images inside dragar\n\n  React.useEffect(() => {\n      Axios.post(`/base/displayIndrager/${props.id}`).then((res) => {\n        if (!printImages.length && res.data.images[0] !== null)\n          setprintImages(res.data.images[0].split(','))\n      })\n  }, [props, printImages])\n\n  \n\n  React.useEffect(() => {\n    if (printImages !== \"\"){\n      printImages.map((el, iKey) => {\n        let srcImg = `http://localhost:3001/${el}`\n        if (iKey === 0) {\n          SetProfileImg(srcImg)\n        }\n        triggerEffect(!effect)\n        if (srcImg != null) {\n          var tmp = Items\n          tmp[iKey].value = srcImg\n          UpdateItems(tmp)\n          const gridId = imageRefs.current[iKey].id + 'img'\n          const grid = document.getElementById(gridId)\n          grid.style.background = 'url(' + srcImg + ')'\n          grid.style.backgroundSize = '200px 300px'\n        }\n      })\n    }\n  }, [printImages])\n\n  // display of images\n\n  const displayProfileImg = React.useCallback(() => {\n    if (ProfileImg != null) {\n      var ProfileImgDiv = ProfImgRef.current\n      ProfileImgDiv.style.background = 'url(' + ProfileImg + ')'\n      ProfileImgDiv.style.backgroundSize = '400px 600px'\n    }\n  }, [ProfileImg])\n\n  useEffect(() => {\n    displayProfileImg()\n  }, [displayProfileImg])\n\n  //////////////////////////\n\n  // count of images\n\n  const fetchImgs = React.useCallback(async () => {\n    let s = await Axios.post(`/base/img/fetch/${props.id}`, {\n      userId: props.id,\n    }).then((res) => {\n      if (res.data.s === 1) return true\n      else return false\n    })\n    return s\n  }, [props])\n\n  useEffect(() => {\n    fetchImgs().then((res) => {\n      if (res) props.checkTotalImg()\n    })\n    if (ProfileImg) props.checkTotalImg()\n  }, [fetchImgs, props, ProfileImg])\n\n  ////////////////////////////\n\n  const handleInsUpd = () => {\n    triggerInput(keyIndex)\n    setOpen(false)\n  }\n\n  const triggerInput = (index) => {\n    if (imageRefs.current[index]) {\n      imageRefs.current[index].click()\n    }\n  }\n\n  const handleChange = async (event, id, index) => {\n    if (event.target.files[0]) {\n      var value = URL.createObjectURL(event.target.files[0])\n      if (index === 0) {\n        SetProfileImg(value)\n      }\n      triggerEffect(!effect)\n      if (value != null) {\n        var tmp = Items\n        tmp[index].value = value\n        UpdateItems(tmp)\n        const gridId = imageRefs.current[index].id + 'img'\n        const grid = document.getElementById(gridId)\n        grid.style.background = 'url(' + value + ')'\n        grid.style.backgroundSize = '200px 300px'\n      }\n    }\n\n    event.preventDefault()\n    var formData = new FormData()\n    formData.set('index', index)\n    formData.set('userId', props.id)\n    formData.set('file', event.target.files[0])\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    }\n    await Axios.post(`base/img/${props.id}`, formData, config)\n  }\n\n  async function handleOnDragEnd(result) {\n    if (!result.destination) return\n    const items = Array.from(Items)\n    const [reorderedItem] = items.splice(result.source.index, 1)\n    items.splice(result.destination.index, 0, reorderedItem)\n    UpdateItems(items)\n    items.map((el, index) => {\n      if (index === 0 && el.value !== '') {\n        SetProfileImg(el.value)\n      }\n      return null\n    })\n    await Axios.post(`base/img/dnd/${props.id}`, {\n      index: result.source.index,\n      id: result.destination.index,\n    })\n  }\n\n  const handleDeleteDialog = () => {\n    handelRemoveImg(keyIndex)\n    setOpen(false)\n  }\n\n  const handelRemoveImg = async (key) => {\n    console.log(printImages[key])\n    if (printImages[key] === undefined){\n      await Axios.post(`/base/displayIndrager/${props.id}`).then((res) => {\n        if (res.data.images[0] !== null){\n          res.data.images[0].split(',').map((el, Keyi) => {\n            if (key === Keyi)\n              Axios.post(`base/dltImgUser/${props.id}`, {image: el})\n          })\n        }\n      })\n    }else{\n      if (Items[key].value !== '' && key !== 0){\n        // if (key === 0) {\n        //   SetProfileImg('https://raw.githubusercontent.com/hassanreus/img/master/profilImageManWomen.jpg')\n        // }\n        var tmp = Items\n        tmp[key].value = ''\n        UpdateItems(tmp)\n        const gridId = imageRefs.current[key].id + 'img'\n        const grid = document.getElementById(gridId)\n        grid.style.background = 'url() #E0E4E9'\n        grid.style.backgroundSize = '200px 300px'\n        await Axios.post(`base/dltImgUser/${props.id}`, {image: printImages[key]})\n        const newList = printImages.filter((item, _key) => key !== _key)\n        // console.log(newList)\n        setprintImages(newList)\n      }\n    }\n  }\n\n  return (\n    <Size>\n      <Grid container>\n        {/* {printImages !== \"\" && printImages.split(',').length >= 0\n          ? printImages.split(',').map((el, iKey) => {\n              let srcImg = `http://localhost:3001/${el}`\n              let altImg = `display all image loop${iKey}`\n              return (\n                <div key={iKey} className={classes.big}>\n                  <CardMedia\n                    className={classes.media1}\n                    image={srcImg}\n                    title={altImg}\n                  />\n                  <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, iKey)}/>\n                </div>\n              )\n            })\n          : ''} */}\n        <div style={{ overflowY: 'scroll', height: '600px' }}>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId='items'>\n              {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {Items.map(({ id }, index) => {\n                    return (\n                      <Draggable\n                        // isDragDisabled={isDD}\n                        key={id}\n                        draggableId={id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            id={id + 'img'}\n                            className={classes.big}\n                            onClick={() => {handleClickOpen(index)}}\n                          >\n                            <input\n                              name='file'\n                              // accept=\".gif,.jpg,.jpeg,.png\"\n                              ref={addToRefs}\n                              onChange={(e) => {\n                                handleChange(e, id, index)\n                              }}\n                              hidden\n                              id={id}\n                              type='file'\n                            />\n                            {provided.placeholder}\n                            {/* {console.log(Object.keys(printImages.split(',')))}\n                            {Object.keys(printImages.split(',')) <= index ? <IoMdAddCircle className={classes.addCircle} /> : <IoIosRemoveCircleOutline className={classes.addCircle} onClick={(event) => handelRemoveImg(event, id)} />} */}\n                            <IoMdAddCircle className={classes.addCircle} />\n                          </div>\n                        )}\n                      </Draggable>\n                    )\n                  })}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Choose your action:\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={handleInsUpd} color=\"primary\">\n              Insert/Update\n          </Button>\n            <Button onClick={handleDeleteDialog} color=\"secondary\" autoFocus>\n              Delete\n          </Button>\n          </DialogActions>\n        </Dialog>\n        {/* <div\n          ref={ProfImgRef}\n          style={{ width: \"400px\", height: \"600px\", border: \"1px black solid\" }}\n          >\n        </div> */}\n        <Card className={classes.root}>\n          <CardMedia\n            image='https://raw.githubusercontent.com/hassanreus/img/master/profilImageManWomen.jpg'\n            title='Contemplative Reptile'\n            // style={{ width: \"400px\", height: \"600px\" }}\n            ref={ProfImgRef}\n            className={classes.media}\n          />\n        </Card>\n      </Grid>\n    </Size>\n  )\n}\n\nexport default MyAddImages\n","/Users/anelamra/Desktop/matcha/client/src/component/browsing/report.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/profil/alertDialog.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/Notifications/PopOver.js",[],"/Users/anelamra/Desktop/matcha/client/src/component/layout/res/Notifications.js",["197","198"],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":31,"column":8,"nodeType":"205","messageId":"206","endLine":31,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":122,"column":6,"nodeType":"209","endLine":122,"endColumn":19,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":151,"column":6,"nodeType":"209","endLine":151,"endColumn":10,"suggestions":"212"},{"ruleId":"203","severity":1,"message":"213","line":4,"column":16,"nodeType":"205","messageId":"206","endLine":4,"endColumn":20},{"ruleId":"203","severity":1,"message":"214","line":4,"column":22,"nodeType":"205","messageId":"206","endLine":4,"endColumn":25},{"ruleId":"203","severity":1,"message":"215","line":4,"column":27,"nodeType":"205","messageId":"206","endLine":4,"endColumn":33},{"ruleId":"203","severity":1,"message":"216","line":4,"column":35,"nodeType":"205","messageId":"206","endLine":4,"endColumn":40},{"ruleId":"203","severity":1,"message":"217","line":4,"column":42,"nodeType":"205","messageId":"206","endLine":4,"endColumn":46},{"ruleId":"203","severity":1,"message":"218","line":4,"column":48,"nodeType":"205","messageId":"206","endLine":4,"endColumn":56},{"ruleId":"203","severity":1,"message":"219","line":4,"column":58,"nodeType":"205","messageId":"206","endLine":4,"endColumn":81},{"ruleId":"203","severity":1,"message":"220","line":4,"column":83,"nodeType":"205","messageId":"206","endLine":4,"endColumn":95},{"ruleId":"203","severity":1,"message":"221","line":4,"column":97,"nodeType":"205","messageId":"206","endLine":4,"endColumn":111},{"ruleId":"203","severity":1,"message":"222","line":4,"column":113,"nodeType":"205","messageId":"206","endLine":4,"endColumn":121},{"ruleId":"203","severity":1,"message":"223","line":4,"column":123,"nodeType":"205","messageId":"206","endLine":4,"endColumn":129},{"ruleId":"203","severity":1,"message":"224","line":4,"column":138,"nodeType":"205","messageId":"206","endLine":4,"endColumn":144},{"ruleId":"203","severity":1,"message":"225","line":5,"column":10,"nodeType":"205","messageId":"206","endLine":5,"endColumn":20},{"ruleId":"203","severity":1,"message":"226","line":13,"column":7,"nodeType":"205","messageId":"206","endLine":13,"endColumn":18},{"ruleId":"203","severity":1,"message":"227","line":47,"column":20,"nodeType":"205","messageId":"206","endLine":47,"endColumn":22},{"ruleId":"228","severity":1,"message":"229","line":60,"column":17,"nodeType":"230","messageId":"231","endLine":60,"endColumn":19},{"ruleId":"207","severity":1,"message":"232","line":91,"column":6,"nodeType":"209","endLine":91,"endColumn":16,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":107,"column":35,"nodeType":"236","endLine":107,"endColumn":48},{"ruleId":"203","severity":1,"message":"237","line":5,"column":10,"nodeType":"205","messageId":"206","endLine":5,"endColumn":16},{"ruleId":"203","severity":1,"message":"238","line":23,"column":8,"nodeType":"205","messageId":"206","endLine":23,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":23,"column":1,"nodeType":"241","messageId":"242","endLine":23,"endColumn":194},{"ruleId":"239","severity":1,"message":"240","line":24,"column":1,"nodeType":"241","messageId":"242","endLine":24,"endColumn":56},{"ruleId":"239","severity":1,"message":"240","line":25,"column":1,"nodeType":"241","messageId":"242","endLine":25,"endColumn":212},{"ruleId":"228","severity":1,"message":"229","line":79,"column":50,"nodeType":"230","messageId":"231","endLine":79,"endColumn":52},{"ruleId":"207","severity":1,"message":"243","line":92,"column":12,"nodeType":"209","endLine":92,"endColumn":28,"suggestions":"244"},{"ruleId":"207","severity":1,"message":"208","line":115,"column":12,"nodeType":"209","endLine":115,"endColumn":14,"suggestions":"245"},{"ruleId":"228","severity":1,"message":"229","line":131,"column":45,"nodeType":"230","messageId":"231","endLine":131,"endColumn":47},{"ruleId":"228","severity":1,"message":"246","line":135,"column":53,"nodeType":"230","messageId":"231","endLine":135,"endColumn":55},{"ruleId":"203","severity":1,"message":"247","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":24},{"ruleId":"203","severity":1,"message":"248","line":7,"column":10,"nodeType":"205","messageId":"206","endLine":7,"endColumn":14},{"ruleId":"203","severity":1,"message":"216","line":7,"column":35,"nodeType":"205","messageId":"206","endLine":7,"endColumn":40},{"ruleId":"203","severity":1,"message":"219","line":7,"column":58,"nodeType":"205","messageId":"206","endLine":7,"endColumn":81},{"ruleId":"203","severity":1,"message":"222","line":7,"column":113,"nodeType":"205","messageId":"206","endLine":7,"endColumn":121},{"ruleId":"203","severity":1,"message":"224","line":7,"column":138,"nodeType":"205","messageId":"206","endLine":7,"endColumn":144},{"ruleId":"203","severity":1,"message":"249","line":8,"column":25,"nodeType":"205","messageId":"206","endLine":8,"endColumn":49},{"ruleId":"203","severity":1,"message":"250","line":10,"column":8,"nodeType":"205","messageId":"206","endLine":10,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":120,"column":34,"nodeType":"253","messageId":"254","endLine":120,"endColumn":36},{"ruleId":"207","severity":1,"message":"255","line":137,"column":6,"nodeType":"209","endLine":137,"endColumn":19,"suggestions":"256"},{"ruleId":"251","severity":1,"message":"252","line":246,"column":56,"nodeType":"253","messageId":"254","endLine":246,"endColumn":58},{"ruleId":"203","severity":1,"message":"257","line":13,"column":27,"nodeType":"205","messageId":"206","endLine":13,"endColumn":43},{"ruleId":"207","severity":1,"message":"258","line":27,"column":8,"nodeType":"209","endLine":27,"endColumn":10,"suggestions":"259"},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["262"],"React Hook React.useEffect has a missing dependency: 'saveMyInfos'. Either include it or remove the dependency array.",["263"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'AppBar' is defined but never used.","'Paper' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'Checkbox' is defined but never used.","'Avatar' is defined but never used.","'Hidden' is defined but never used.","'makeStyles' is defined but never used.","'StyledBadge' is assigned a value but never used.","'xx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'props.id' and 'saveMyInfos'. Either include them or remove the dependency array.",["264"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'PopOver' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook React.useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["265"],["266"],"Expected '===' and instead saw '=='.","'StylesProvider' is defined but never used.","'Grid' is defined but never used.","'IoIosRemoveCircleOutline' is defined but never used.","'AlertDialoge' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has missing dependencies: 'Items' and 'effect'. Either include them or remove the dependency array. You can also do a functional update 'triggerEffect(e => ...)' if you only need 'effect' in the 'triggerEffect' call.",["267"],"'SetmessageNumber' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'notifNumber' and 'socket'. Either include them or remove the dependency array.",["268"],"no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [userInf, id, socket]",{"range":"283","text":"284"},"Update the dependencies array to be: [id, saveMyInfos]",{"range":"285","text":"286"},"Update the dependencies array to be: [props.id, saveMyInfos, stopLoop]",{"range":"287","text":"288"},"Update the dependencies array to be: [props.hisInfos, props.id]",{"range":"289","text":"290"},"Update the dependencies array to be: [socket]",{"range":"291","text":"292"},"Update the dependencies array to be: [Items, effect, printImages]",{"range":"293","text":"294"},"Update the dependencies array to be: [notifNumber, socket]",{"range":"295","text":"296"},[4105,4118],"[userInf, id, socket]",[4717,4721],"[id, saveMyInfos]",[2454,2464],"[props.id, saveMyInfos, stopLoop]",[2534,2550],"[props.hisInfos, props.id]",[3387,3389],"[socket]",[3255,3268],"[Items, effect, printImages]",[924,926],"[notifNumber, socket]"]